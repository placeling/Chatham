<% content_for :head do %>
    <title><%= t('user.user_head', {:user => @user.username}) %></title>
    <meta name="description" content="<%= t('user.description', {:user => @user.username, :desc => @user.description}) %>"/>
    <meta property="og:title" content="<%= @user.username %>"/>
    <meta property="og:url" content="<%= @user.og_path %>"/>
    <meta property="og:type" content="placeling:user"/>
    <meta property="og:image" content="<%= @user.main_url %>"/>
    <meta property="og:description" content="<%= @user.description %>"/>
    <meta name="viewport" content="initial-scale=0.8">

    <meta name="twitter:card" content="summary"/>
    <meta name="twitter:url" content="<%= @user.og_path %>"/>
    <meta name="twitter:title" content="<%= @user.username %>"/>
    <meta name="twitter:description" content="<%= @user.description %>"/>
    <meta name="twitter:image" content="<%= @user.thumb_url %>"/>

    <meta name="twitter:site" content="@placeling">
    <meta name="twitter:site:id" content="248750993">

    <% if auth = @user.authentications.where(:p => "twitter").first %>
        <meta name="twitter:creator:id" content="<%= auth.uid %>"/>
    <% end %>
<% end %>

<% content_for :javascript_includes do %>
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCtWBCKJwtHq7ME82vk3d7eUsRknvzgrAQ&sensor=false">
    </script>
<% end %>

<% content_for :css do %>
    @media only screen and (max-width: 960px) {
    #header, #footerbottom, #download_container, #user_and_map  {
    display: none;
    }

    #user_and_list {
    display: inline;
    }

    html, body {
    min-width: 100%;
    width: 100%
    overflow: auto;
    }
    }
<% end %>

<% content_for :javascript do %>
    <script type="text/javascript">
        var DEFAULT_ZOOM = 13;
        var DEFAULT_HEIGHT = 81;
        var RIGHT_GAP = 8
        var MAX_PHOTOS = 4;
        var SPINNER_OFFSET = 112;
        var CURRENT_LOCATION_OFFSET = 32;
        var persps = {};
        var myOptions;
        var placemark;
        var map;
        var shape;
        var infowindow;
        var loadState;
        var sortAlpha = false;
        var initialOffset = 0.2;

        var iPadWidth = 960;

        var filters = {
            'tags':[]
        }

        <% if @user.location && @user.location.length == 2 %>
        var user_lat = <%= @user.location[0] %>;
        var user_lng = <%= @user.location[1] %>;
        <% end %>

        Number.prototype.toRad = function () {
            return this * Math.PI / 180;
        }

        function distance(lat1, lon1, lat2, lon2) {
            var R = 6371; // km
            var dLat = (lat2 - lat1).toRad();
            var dLon = (lon2 - lon1).toRad();
            var lat1 = lat1.toRad();
            var lat2 = lat2.toRad();

            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            var d = R * c;

            return Math.round(d * 1000);
        }


        function openWindow(url) {
            window.open(url, '_blank');
        }

        function compare(a, b) {
            if (a.lower_name < b.lower_name)
                return -1;
            if (a.lower_name > b.lower_name)
                return 1;
            return 0;
        }

        function distanceSort(a, b) {
            if (a.delta < b.delta)
                return -1;
            if (a.delta > b.delta)
                return 1;
            return 0;
        }

        function filter_term(a, b) {
            if (a.term < b.term)
                return -1;
            if (a.term > b.term)
                return 1;
            return 0;
        }

        function filter_count(a, b) {
            if (a.count > b.count)
                return -1;
            if (a.count < b.count)
                return 1;
            if (a.count == b.count) {
                if (a.term < b.term)
                    return -1;
                if (a.term > b.term)
                    return 1;
                return 0;
            }
        }

        function updateTags(perspective, currentTag) {
            var rawHTML = '<ul>';
            for (var i = 0; i < perspective.tags.length; i++) {
                rawHTML += '<a href="#" id="tag_';
                rawHTML += perspective.tags[i];
                rawHTML += '" class="tag_filter_trigger tag_link">';
                rawHTML += '<li class="tags';
                if (currentTag === perspective.tags[i]) {
                    rawHTML += " highlighted_tag";
                }
                rawHTML += '">#';
                rawHTML += perspective.tags[i];
                rawHTML += "</li></a>";
            }
            rawHTML += '</ul>';
            return rawHTML;
        }

        function createMarker(perspective) {
            var marker = new google.maps.Marker({
                position:new google.maps.LatLng(perspective.ploc[0], perspective.ploc[1]),
                icon:placemark,
                shape:shape,
                map:map,
                title:perspective.name
            });
            google.maps.event.addListener(marker, 'click', function () {
                if (infowindow.getMap() && infowindow.getPosition() === marker.getPosition()) {
                    infowindow.close();
                    delete loadState["<%= @user.username %>"]['infowindow'];
                } else {
                    var currentTag = "";
                    if (typeof loadState["<%= @user.username %>"]['filterValue'] !== "undefined") {
                        currentTag = loadState["<%= @user.username %>"]['filterValue'];
                    }

                    loadState["<%= @user.username %>"]['infowindow'] = perspective['id'];
                    var infoWindowHTML = '<div class="info_window">';

                    // Edit vs. star
                    if (perspective.mine) {
                        var action = '<div class="info_action"><a href="/perspectives/' + perspective.id + "/edit" + '"><img class="info_img" src="<%= asset_path("writer.png") %>"></a></div>';
                        infoWindowHTML += action;
                    } else {
                        if ((perspective.memo !== null && perspective.memo.length > 0) || perspective.photos.length > 0) {
                            var action = '<div class="info_action"><a href="/" id="star">';
                            if (perspective.starred == true) {
                                action += "<img class='info_img' src='<%= asset_path("starred.png") %>'>";
                            } else {
                                action += "<img class='info_img' src='<%= asset_path("unstarred.png") %>'>";
                            }
                            action += '</a></div>';
                            infoWindowHTML += action;
                        }
                    }

                    infoWindowHTML += '<div class="info_name"><a href="/places/' + perspective.place.slug + '">' + perspective.place.name + '</a></div>';

                    if (perspective.tags.length > 0) {
                        infoWindowHTML += '<div class="info_cat_and_tags">';
                        infoWindowHTML += updateTags(perspective, currentTag);
                        infoWindowHTML += '</div>';
                    }

                    if (perspective.memo !== null && perspective.memo.length > 0) {
                        infoWindowHTML += '<div class="info_memo">' + perspective.memo + '</div>';
                    }

                    if (perspective.url !== null) {
                        infoWindowHTML += '<div class="info_url"><a href="' + perspective.url + '" onclick="javascript:openWindow(this.href);return false;"><%= t('perspective.web_link') %></a></div>';
                    }

                    if (perspective.photos.length > 0) {
                        var pics = '<div class="info_pics lightboxGallery">';
                        for (var i = 0; i < perspective.photos.length; i++) {
                            if (i < MAX_PHOTOS) {
                                pics += '<span class="info_pic"><a href="' + perspective.photos[i].main_url + '" class="lightbox"><img class="info_pic_thumb" src="' + perspective.photos[i].square_url + '"></a></span>';
                            } else {
                                pics += '<span class="hidden_pic"><a href="' + perspective.photos[i].main_url + '" class="lightbox"><img class="info_pic_thumb" src="' + perspective.photos[i].square_url + '"></a></span>';
                            }
                        }
                        if (perspective.photos.length > MAX_PHOTOS) {
                            pics += '<div class="more_photos">+' + (perspective.photos.length - MAX_PHOTOS) + " more</div>";
                        }

                        pics += '</div>';
                        infoWindowHTML += pics;
                    }

                    var share = '<div class="info_action"><span><a href="https://www.placeling.com<%= user_path(@user) %>?pid=' + perspective.id + '" onclick="javascript:return false;" class="email"><img src="<%= asset_path("email.png"); %>" class="info_icon"></a></span>';

                    share += "</div>";

                    infoWindowHTML += share;
                    var modified_at = new Date(perspective.modified_timestamp);
                    var mod_action = '<div class="info_update"><span class="info_mod">' + $.datepicker.formatDate('M. dd, yy', modified_at);
                    +'</span>';

                    if (perspective.mine) {
                        mod_action += '<a href="/perspectives/' + perspective.id + '" class="info_act" data-confirm="Are you sure?" data-method="delete" rel="nofollow">Delete</a>';
                    } else {
                        mod_action += '<a href="/perspectives/' + perspective.id + '/flag" class="info_act" data-confirm="Flag these notes &amp; photos?" data-method="post" data-remote="true" rel="nofollow">Flag</a>';
                    }

                    mod_action += '</div>';

                    infoWindowHTML += mod_action;

                    infoWindowHTML += '</div>';

                    infowindow.open(map, marker);
                    infowindow.setContent(infoWindowHTML);
                    loadState["<%= @user.username %>"]['infowindow'] = perspective["id"];
                    infowindow.setPosition(marker.getPosition());
                    google.maps.event.trigger(map, 'idle');

                    function armTags() {
                        $('.tag_link').each(function (e) {
                            $(this).click(function (e) {
                                e.preventDefault();
                                var term = $(this).text();
                                loadState["<%= @user.username %>"]['filterType'] = 'tag';
                                loadState["<%= @user.username %>"]['filterValue'] = term.substr(1, term.length - 1);
                                currentTag = term.substr(1, term.length - 1);

                                google.maps.event.trigger(map, 'idle');

                                $('.info_cat_and_tags').html(updateTags(perspective, currentTag));
                                armTags();
                                return false;
                            })
                        });
                    }

                    armTags();

                    $('.lightboxGallery').each(function () {
                        $('.lightbox', this).lightBox();
                    });

                    $('.email').each(function () {
                        $(this).qtip({
                            content:'<span class="link_holder"><span class="link_header">Link:</span><input type="text" value="' + $(this).attr("href") + '" class="link_text"></span>',
                            position:{
                                my:'bottom center',
                                at:'top center'
                            },
                            show:{
                                event:'click',
                                solo:true
                            },
                            hide:{
                                event:'click'
                            },
                            style:{
                                classes:'ui-tooltip-rounded ui-tooltip-shadow'
                            }
                        });
                    });

                    $('#star').click(function (e) {
                        e.preventDefault();
                        if (perspective.starred == true) {
                            $.ajax({
                                url:"/perspectives/" + perspective.id + "/unstar",
                                dataType:"script",
                                type:"POST",
                                success:function (data) {
                                    perspective.starred = false;
                                    $('.info_img').attr("src", "<%= asset_path("unstarred.png"); %>");
                                },
                                error:function (request, error) {
                                    console.log(error);
                                    console.log(request.status);
                                    if (request.status === 401) {
                                        location.href = "/users/sign_in";
                                    }
                                }
                            });
                        } else {
                            $.ajax({
                                url:"/perspectives/" + perspective.id + "/star",
                                dataType:"script",
                                type:"POST",
                                success:function (data) {
                                    perspective.starred = true;
                                    $('.info_img').attr("src", "<%= asset_path("starred.png"); %>");
                                },
                                error:function (request, error) {
                                    console.log(error);
                                    console.log(request.status);
                                    if (request.status === 401) {
                                        location.href = "/users/sign_in";
                                    }
                                }
                            });
                        }
                        return false;
                    });
                }
            });
            marker.setVisible(false);
            return marker;
        }

        function updatePerspectives(perspectiveList) {
            for (var i = 0; i < perspectiveList.length; i++) {
                if (typeof persps[perspectiveList[i]['id']] === "undefined") {
                    persps[perspectiveList[i]['id']] = perspectiveList[i];
                    persps[perspectiveList[i]['id']]['marker'] = createMarker(perspectiveList[i]);
                }
            }
            updateMap();
        }

        function updateList(perspectiveList, lat, lng) {
            var html = ''
            if (perspectiveList.length == 0) {
                html = '<div id="no_places"><%= t('user.no_nearby_places') %></div>'
            } else {
                html = '<ul id="place_list_holder">';

                for (var i = 0; i < perspectiveList.length; i++) {
                    var delta = distance(lat, lng, perspectiveList[i].ploc[0], perspectiveList[i].ploc[1]);
                    perspectiveList[i].delta = delta;
                }

                // Sort by distance
                perspectiveList.sort(distanceSort)

                for (var i = 0; i < perspectiveList.length; i++) {
                    var perspective = perspectiveList[i];
                    var tempHTML = '<li class="list_place ';
                    tempHTML += (i % 2 == 0) ? "even" : "odd";
                    tempHTML += '">';

                    tempHTML += '<div class="list_name"><a href="/places/' + perspective.place.slug + '">' + perspective.place.name + '</a></div>';

                    if (perspective.tags.length > 0) {
                        tempHTML += '<div class="list_tags"><ul>';
                        for (var j = 0; j < perspective.tags.length; j++) {
                            tempHTML += '<li class="tags">#';
                            tempHTML += perspective.tags[j];
                            tempHTML += '</li>'
                        }
                        tempHTML += "</ul></div>";
                    }

                    if (perspective.memo !== null && perspective.memo.length > 0) {
                        tempHTML += '<div class="list_memo">' + perspective.memo + '</div>';
                    }

                    if (perspective.photos.length > 0) {
                        var pics = '<div class="info_pics lightboxGallery">';
                        for (var j = 0; j < perspective.photos.length; j++) {
                            pics += '<span class="info_pic"><a href="' + perspective.photos[j].square_url + '" class="lightbox"><img class="info_pic_thumb" src="' + perspective.photos[j].square_url + '"></a></span>';
                        }
                        pics += '</div>';
                        tempHTML += pics;
                    }
                    tempHTML += '<div class="distance">' + perspective.delta + 'm</div>';

                    tempHTML += "</li>";
                    html += tempHTML;
                }
                html += "</ul>";
            }

            $("#list").html(html);

            $('.lightboxGallery').each(function () {
                $('.lightbox', this).lightBox();
            });
        }

        function updateMap() {
            var currentBounds = map.getBounds();

            loadState["<%= @user.username %>"]['lat'] = map.getCenter().lat();
            loadState["<%= @user.username %>"]['lng'] = map.getCenter().lng();
            loadState["<%= @user.username %>"]['zoom'] = map.getZoom();

            var filterTerm = loadState["<%= @user.username %>"]['filterValue'];
            var filterType = loadState["<%= @user.username %>"]['filterType'];

            for (var persp in persps) {
                if (currentBounds.contains(persps[persp]["marker"].getPosition())) {
                    if (typeof filterTerm === "undefined") {
                        if (persps[persp]["marker"].getVisible() === false) {
                            persps[persp]["marker"].setVisible(true);
                        }
                    } else {
                        var pass = false;
                        if (filterType === 'tag') {
                            if (persps[persp].tags.length > 0) {
                                for (var j = 0; j < persps[persp].tags.length; j++) {
                                    if (persps[persp].tags[j] === filterTerm) {
                                        pass = true;
                                    }
                                }
                            }
                        } else if (filterType === 'category') {
                            if (persps[persp].place.venue_types.length > 0) {
                                for (var j = 0; j < persps[persp].place.venue_types.length; j++) {
                                    if (persps[persp].place.venue_types[j] === filterTerm) {
                                        pass = true;
                                    }
                                }
                            }
                        }
                        if (pass === true && persps[persp]["marker"].getVisible() === false) {
                            persps[persp]["marker"].setVisible(true);
                        } else if (pass === false && persps[persp]["marker"].getVisible() === true) {
                            persps[persp]["marker"].setVisible(false);
                            if (persps[persp]["id"] === loadState["<%= @user.username %>"]['infowindow']) {
                                infowindow.close();
                                delete loadState["<%= @user.username %>"]['infowindow'];
                            }
                        }
                    }
                } else {
                    if (persps[persp]["marker"].getVisible() === true) {
                        persps[persp]["marker"].setVisible(false);
                        if (persps[persp]["id"] === loadState["<%= @user.username %>"]['infowindow']) {
                            infowindow.close();
                            delete loadState["<%= @user.username %>"]['infowindow'];
                        }
                    }
                }
            }

            if (infowindow.getMap()) {
                if (currentBounds.contains(infowindow.getPosition()) === false) {
                    infowindow.close();
                    delete loadState["<%= @user.username %>"]['infowindow'];
                }
            } else if (typeof loadState["<%= @user.username %>"]['infowindow'] !== "undefined") {
                openId = loadState["<%= @user.username %>"]['infowindow'];
                if (persps.hasOwnProperty(openId) && persps[openId].hasOwnProperty("marker")) {
                    google.maps.event.trigger(persps[loadState["<%= @user.username %>"]['infowindow']]["marker"], 'click');
                }
            }

            $.cookie('page_state', JSON.stringify(loadState), {path:'/'});

            if (loadState["<%= @user.username %>"]['location'] === 'places') {
                updatePlaces();
            } else if (loadState["<%= @user.username %>"]['location'] === 'photos') {
                updatePhotos();
            }

            updateFilters(sortAlpha);
        }

        function hideFilters() {
            if (infowindow.getMap()) {
                infowindow.close();
            }
            delete loadState["<%= @user.username %>"]['filterType'];
            delete loadState["<%= @user.username %>"]['filterValue'];
            delete loadState["<%= @user.username %>"]['sort'];
            $('#filter_bubble').fadeOut(100);
            $('#red_arrow_left').fadeOut(100);
            $('#grey_arrow_left').fadeOut(100);
            window.setTimeout(function () {
                filterTag = undefined;
                updateMap();
            }, 100);
        }

        function updateFilters(sortDown) {
            filters['tags'] = {};

            var bounds = map.getBounds();
            for (var persp in persps) {
                if (bounds.contains(persps[persp]["marker"].getPosition())) {
                    if (persps[persp].tags.length > 0) {
                        for (var j = 0; j < persps[persp].tags.length; j++) {
                            if (filters['tags'][persps[persp].tags[j]]) {
                                filters['tags'][persps[persp].tags[j]] += 1;
                            } else {
                                filters['tags'][persps[persp].tags[j]] = 1;
                            }
                        }
                    }
                }
            }

            var cleanFilters = [];

            for (var tag in filters['tags']) {
                cleanFilters.push({'term':tag, 'type':'tag', 'count':filters['tags'][tag]});
            }

            var html = "";
            if (typeof loadState["<%= @user.username %>"]['filterType'] !== "undefined") {
                html += "<div class='red_arrow_holder'>#";
                html += loadState["<%= @user.username %>"]['filterValue'];
                html += " (";
                var count = 0;
                for (var i = 0; i < cleanFilters.length; i++) {
                    if (cleanFilters[i]['term'] === loadState["<%= @user.username %>"]['filterValue']) {
                        count = cleanFilters[i]['count'];
                        break;
                    }
                }
                html += count;
                html += ")</div>";
            } else {
                html += '<div id="filter_holder">'
                if (cleanFilters.length == 0) {
                    html += '<div class="filter_header" id="no_filters"><div id="close_filters"><a href="#" id="close_filters_link"><%= image_tag asset_path("close.png"), :class=>"close_filters" %></a></div><%= t('user.no_hashtags') %></div>';
                } else {
                    html += '<div class="filter_header"><div id="close_filters"><a href="#" id="close_filters_link"><%= image_tag asset_path("close.png"), :class=>"close_filters" %></a></div>';
                    if (sortDown === false) {
                        html += '<div id="sort_type"><a href="/" id="sort_alpha">abc</a> 321</div>';
                        cleanFilters.sort(filter_count);
                    } else {
                        html += '<div id="sort_type">abc <a href="/" id="sort_count">321</a></div>';
                        cleanFilters.sort(filter_term);
                    }

                    html += '</div><div id="available_filters">';

                    for (var i = 0; i < cleanFilters.length; i++) {
                        html += '<div class="filter_tag ';
                        html += (i % 2 == 0) ? "even" : "odd";
                        html += '"><a href="/" class="filter_value">#';
                        html += cleanFilters[i]["term"];
                        html += '</a> <span class="filter_count">(';
                        html += cleanFilters[i]["count"];
                        html += ')</span>';
                        html += "</div>";
                    }
                    html += "</div>";
                }
                html += "</div>";
            }

            $('#filter_bubble').html(html);

            if (typeof loadState["<%= @user.username %>"]['filterType'] !== "undefined") {
                if (!$('#filter_bubble').is(":visible")) {
                    $('#filter_bubble').fadeIn(100);
                    $('#red_arrow_left').fadeIn(100);
                }
            }

            $('.filter_value').each(function () {
                $(this).click(function (e) {
                    e.preventDefault();
                    if (infowindow.getMap()) {
                        infowindow.close();
                        delete loadState["<%= @user.username %>"]['infowindow'];
                    }
                    $('#red_arrow_left').show();
                    var term = $(this).text();
                    loadState["<%= @user.username %>"]['filterType'] = 'tag';
                    loadState["<%= @user.username %>"]['filterValue'] = term.substr(1, term.length - 1);
                    google.maps.event.trigger(map, 'idle');
                    return false;
                })
            })

            $('#sort_count').click(function (e) {
                e.preventDefault();
                loadState["<%= @user.username %>"]['sort'] = 'count';
                sortAlpha = false;
                google.maps.event.trigger(map, 'idle');
                return false;
            });

            $('#sort_alpha').click(function (e) {
                e.preventDefault();
                loadState["<%= @user.username %>"]['sort'] = 'alpha';
                sortAlpha = true
                google.maps.event.trigger(map, 'idle');
                return false;
            })

            $('.red_arrow_holder').click(function (e) {
                e.preventDefault();
                hideFilters();
                return false;
            });

            $('#close_filters_link').click(function (e) {
                e.preventDefault();
                hideFilters();
                return false;
            });
        }

        function updatePlaces() {
            var locationHTML = '';

            var placePerspectives = [];
            var count = 0;

            for (var persp in persps) {
                if (persps[persp]["marker"].getVisible() === true) {
                    persps[persp]["lower_name"] = persps[persp]["place"]["name"].toLowerCase();
                    placePerspectives.push(persps[persp]);
                    count += 1;
                }
            }

            locationHTML += '<div id="place_list_header" class="filter_header"><div class="close_list_filters"><a id="close_place_filters_link"><%= image_tag asset_path("close.png"), :class => "close_filters" %></a></div>';
            if (count == 0) {
                locationHTML += '<%= t("perspective.no_places") %></div>';
            } else {
                locationHTML += '<%= t("perspective.places") %></div><div id="place_list_items" class="filter_list_items">';
                placePerspectives = placePerspectives.sort(compare);
                for (var i = 0; i < placePerspectives.length; i++) {
                    var html = '<div class="map_place_holder '
                    html += (i % 2 == 0) ? "even" : "odd";
                    html += '"><a href="/" class="map_place" id="' + placePerspectives[i]["id"] + '"><div>' + placePerspectives[i]["place"]["name"];
                    html += '</div></a></div>';
                    locationHTML += html;
                }
                locationHTML += "</div>";
            }

            $('#name_filter_values').html(locationHTML);

            $('#close_place_filters_link').click(function (e) {
                e.preventDefault();
                $('#name_filter_bubble').fadeOut(100);
                delete loadState["<%= @user.username %>"]['location'];
                return false;
            });

            $('.map_place').each(function (e) {
                $(this).click(function (e) {
                    e.preventDefault();
                    google.maps.event.trigger(persps[$(this).attr('id')]["marker"], 'click');
                    return false;
                });
            });

            $(window).resize();
        }

        function updatePhotos() {
            var count = 0;
            var locationHTML = "";
            var tempHTML = "";
            for (var persp in persps) {
                if (persps[persp]["marker"].getVisible() === true) {
                    if (persps[persp].photos.length > 0) {
                        var pics = '';

                        for (var j = 0; j < persps[persp].photos.length; j++) {
                            pics += '<div class="photo_view_pic"><img class="map_photo_thumb map_photo" id="' + persp + '" src="' + persps[persp].photos[j].square_url + '"></div>';
                        }
                        tempHTML += pics;
                        count += 1;
                    }
                }
            }

            locationHTML += '<div id="photo_list_header" class="filter_header"><div class="close_list_filters"><a id="close_photo_filters_link"><%= image_tag asset_path("close.png"), :class => "close_filters" %></a></div>';
            if (count == 0) {
                locationHTML += '<%= t("perspective.no_photos") %></div>';
            } else {
                locationHTML += '<%= t("perspective.photos") %></div><div id="photo_list_items" class="filter_list_items">';
                locationHTML += tempHTML;
                locationHTML += '</div>';
            }

            $('#photo_filter_values').html(locationHTML);

            $('#close_photo_filters_link').click(function (e) {
                e.preventDefault();
                $('#photo_filter_bubble').fadeOut(100);
                delete loadState["<%= @user.username %>"]['location'];
                return false;
            });

            $('.map_photo').each(function (e) {
                $(this).click(function (e) {
                    e.preventDefault();
                    if (typeof loadState["<%= @user.username %>"]['infowindow'] === "undefined" || loadState["<%= @user.username %>"]['infowindow'] !== $(this).attr('id')) {
                        google.maps.event.trigger(persps[$(this).attr('id')]["marker"], 'click');
                    }
                    return false;
                });
            });

            $(window).resize();
        }

        function initialize() {
            persps = {};
            var topLat;
            var bottomLat;
            var rightLng;
            var leftLng;
            var requests = 0;
            var runCount = 0;

            var current_top;
            var current_right;
            var current_bottom;
            var current_left;

            loadState = JSON.parse($.cookie('page_state'));
            if (loadState === null) {
                loadState = {};
            }

            if (typeof loadState["<%= @user.username %>"] === "undefined") {
                loadState["<%= @user.username %>"] = {};
            }

            if (typeof loadState["<%= @user.username %>"]['sort'] !== "undefined" && loadState["<%= @user.username %>"]['sort'] === 'count') {
                sortAlpha = false;
            }

        <% if @current_location.length > 0 %>
            var lat = <%= @current_location[0] %>;
            var lng = <%= @current_location[1] %>;
        <% else %>
        <% if @user.location && @user.location.length == 2 && @user.location[0] != 0.0 && @user.location[1] != 0.0 %>
            var lat = <%= (@user.location[0] * 100).round().to_f/100 %>;
            var lng = <%= (@user.location[1] * 100).round().to_f/100 %>;
        <% else %>
            var lat = <%= @default_location[0] %>;
            var lng = <%= @default_location[1] %>;
        <% end %>
        <% end %>

        <% if @zoom %>
            var zoom = <%= @zoom %>;
            loadState["<%= @user.username %>"]['zoom'] = <%= @zoom %>;
        <% else %>
            var zoom = DEFAULT_ZOOM;
        <% end %>


            if (typeof loadState["<%= @user.username %>"]['zoom'] !== "undefined") {
                zoom = loadState["<%= @user.username %>"]['zoom'];
            }

            if (typeof loadState["<%= @user.username %>"]['sort'] === "undefined") {
                loadState["<%= @user.username %>"]['sort'] = 'count';
            }

            var styles = [
                {
                    elementType:"geometry",
                    stylers:[
                        { visibility:"simplified" }
                    ]
                },
                {
                    featureType:"landscape",
                    stylers:[
                        { lightness:-9 },
                        { color:"#f4daa6" }
                    ]
                },
                {
                    featureType:"poi.park",
                    stylers:[
                        { color:"#e1e255" },
                        { lightness:-22 },
                        { saturation:-45 }
                    ]
                },
                {
                    featureType:"water",
                    stylers:[
                        { color:"#96eafe" },
                        { saturation:-41 }
                    ]
                },
                {
                    featureType:"road.highway",
                    stylers:[
                        { color:"#e78080" }
                    ]
                },
                {
                    featureType:"road.arterial",
                    stylers:[
                        { color:"#f6dec9" },
                        { lightness:-20 }
                    ]
                },
                { elementType:"labels.text", stylers:[
                    { color:"#3e3e3e" },
                    { weight:0.1 }
                ] }  ,
                {
                    featureType:"landscape.man_made",
                    stylers:[
                        { lightness:-8 }
                    ]
                },
                {
                    featureType:"transit.line",
                    stylers:[
                        { color:"#da8052" }
                    ]
                },
                {
                    featureType:"poi.sports_complex",
                    stylers:[
                        { visibility:"off" }
                    ]
                },
                {
                    featureType:"poi.business",
                    stylers:[
                        { visibility:"off" }
                    ]
                },
                {
                    featureType:"poi.government",
                    stylers:[
                        { visibility:"off" }
                    ]
                },
                {
                    featureType:"poi.medical",
                    stylers:[
                        { visibility:"off" }
                    ]
                },
                {
                    featureType:"poi.place_of_worship",
                    stylers:[
                        { visibility:"off" }
                    ]
                },
                {
                    featureType:"poi.school",
                    stylers:[
                        { visibility:"off" }
                    ]
                }
            ];

            myOptions = {
                center:new google.maps.LatLng(lat, lng),
                zoom:zoom,
                panControl:false,
                mapTypeControl:false,
                scaleControl:false,
                streetViewControl:false,
                overviewMapControl:false,
                keyboardShortcuts:false,
                zoomControlOptions:{
                    position:google.maps.ControlPosition.LEFT_CENTER
                },
                mapTypeId:google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById("main_map"), myOptions);

            map.setOptions({styles:styles});

            placemark = new google.maps.MarkerImage(
                    '/images/placemarker.png',
                    new google.maps.Size(30, 32),
                    new google.maps.Point(0, 0),
                    new google.maps.Point(9, 32)
            );

            shape = {
                coord:[1, 1, 1, 15, 6, 20, 9, 30, 12, 20, 18, 15, 18, 1],
                type:'poly'
            };

            infowindow = new google.maps.InfoWindow({});

            google.maps.event.addListener(map, 'click', function () {
                infowindow.close();
                delete loadState["<%= @user.username %>"]['infowindow'];
                google.maps.event.trigger(map, 'idle');
            });

            google.maps.event.addListener(infowindow, 'closeclick', function () {
                delete loadState["<%= @user.username %>"]['infowindow'];
                google.maps.event.trigger(map, 'idle');
            })

            google.maps.event.addListener(map, 'idle', function () {
                var callServer = false;
                var bounds = map.getBounds();

                if (typeof current_top === "undefined") {
                    current_top = map.getBounds().getNorthEast().lat();
                }
                if (typeof current_right === "undefined") {
                    current_right = map.getBounds().getNorthEast().lng();
                }
                if (typeof current_bottom === "undefined") {
                    current_bottom = map.getBounds().getSouthWest().lat();
                }
                if (typeof current_left === "undefined") {
                    current_left = map.getBounds().getSouthWest().lng();
                }

                // Piggyback the update users list on this event
                var temp_top = map.getBounds().getNorthEast().lat();
                var temp_right = map.getBounds().getNorthEast().lng();
                var temp_bottom = map.getBounds().getSouthWest().lat();
                var temp_left = map.getBounds().getSouthWest().lng();

                if ((temp_top != current_top) || (temp_right != current_right) || (temp_left != current_left) || (temp_bottom != current_bottom) || (typeof topLat === "undefined")) {
                    current_top = temp_top;
                    current_right = temp_right;
                    current_left = temp_left;
                    current_bottom = temp_bottom;

                    // Account for loading in list view
                    if (current_top === current_bottom) {
                        current_top += initialOffset;
                        current_bottom -= initialOffset;
                    }
                    if (current_left === current_right) {
                        current_left -= initialOffset;
                        current_right += initialOffset;
                    }

                    $.ajax({
                        url:'<%= nearby_user_path(@user) %>',
                        data:{
                            top_lat:current_top,
                            bottom_lat:current_bottom,
                            right_lng:current_right,
                            left_lng:current_left,
                            zoom:map.getZoom(),
                            center_lat:map.getCenter().lat(),
                            center_lng:map.getCenter().lng()
                        },
                        dataType:"json",
                        type:"GET",
                        error:function (jqXHR, textStatus, errorThrown) {
                            console.debug(textStatus, errorThrown);
                        },
                        success:function (data) {
                            var html = "";
                            //If has key following, then signed in otherwise not
                            html += '<div id="nearby_placemarks"><%= t('user.nearby_stuff')%></div>'

                            if ("zoom" in data) {
                                html += '<span class="nothing_nearby"><%= t('user.zoom_in') %></span>'

                                if ($("#nearby_users").is(":visible") == false) {
                                    $('#nearby_users').fadeOut("fast")
                                }

                                $('#nearby_users').html(html);
                                $('#nearby_users').fadeIn("fast");
                            } else {
                                var placemark_count = data["popular"].length;
                                var question_count = 0;

                                if ("following" in data) {
                                    placemark_count += data["following"].length;
                                }

                                if ("questions" in data) {
                                    question_count += data["questions"]["count"];
                                }

                                if (question_count == 0 && placemark_count == 0 && data['owner'] == false) {
                                    html += '<div id="no_data"><%= t('user.nothing_yet') %></div>';
                                } else {
                                    if (placemark_count == 0 && data['owner'] == true) {
                                        html += '<div id="no_data"><%= t('user.just') %></div>';
                                    } else if (placemark_count > 0) {
                                        html += '<div id="following">';

                                        if ("following" in data) {
                                            if (data["following"].length == 0) {
                                                html += "";
                                            } else if (data["following"].length == 1) {
                                                html += '<a href="#" id="nearby_following"><%= t('user.one_person') %></a>';
                                            } else {
                                                html = html + '<a href="#" id="nearby_following">' + data["following"].length + ' <%= t('user.plural_follow') %></a>';
                                            }
                                            html += "</div>";
                                        } else {
                                            html += '<a href="<%= new_user_session_path %>"><%= t('user.nearby_sign_in') %></a> <%= t('user.see_follow') %></div>';
                                        }

                                        html += '<div id="popular">'
                                        if (data["popular"].length == 0) {
                                            html += "";
                                        } else if (data["popular"].length == 1) {
                                            html += '<a href="#" id="nearby_popular"><%= t('user.one_local') %></a>';
                                        } else {
                                            html = html + '<a href="#" id="nearby_popular">' + data["popular"].length + " <%= t('user.locals') %></a>";
                                        }
                                    }
                                    if (question_count > 0) {
                                        html += '<div id="nearby_questions"'
                                        if (placemark_count > 0) {
                                            html += 'class="question_spacer"'
                                        }
                                        html += '><a href="<%= questions_path %>' + "?lat=" + data["questions"]["lat"] + "&lng=" + data["questions"]["lng"] + '">';
                                        if (question_count == 1) {
                                            var string = "1 <%= t('user.question') %>";
                                        } else {
                                            var string = question_count + " <%= t('user.questions') %>";
                                        }
                                        html += string;
                                        html += '</a></div>'
                                    }
                                }

                                if ($("#nearby_users").is(":visible") == false) {
                                    $('#nearby_users').fadeOut("fast")
                                }

                                $('#nearby_users').html(html);
                                $('#nearby_users').fadeIn("fast")

                                if (("following" in data) && (data["following"].length > 0)) {
                                    var following_html = '<div id="nearby_following_list" title="<%= t('user.people_you_follow') %>">';

                                    for (var i = 0; i < data["following"].length; i++) {
                                        following_html = following_html + '<div class="nearby_person"><a href="' + data["following"][i]["url"] + '"><img class="nearby_pic" src="' + data["following"][i]["pic"] + '"></a> <a href="' + data["following"][i]["url"] + '">' + data["following"][i]["name"] + '</a> (' + data["following"][i]["count"] + ')</div>';
                                    }

                                    following_html += "</div>";
                                    $("#nearby_users").after(following_html);

                                    $("#nearby_following").click(function (e) {
                                        e.preventDefault();
                                        $("#nearby_following_list").dialog({
                                            modal:true,
                                            height:400,
                                            closeOnEscape:true
                                        });
                                        return false;
                                    })
                                }

                                if (data["popular"].length > 0) {
                                    var popular_html = '<div id="nearby_popular_list" title="<%= t('user.top_locals') %>">';

                                    for (var i = 0; i < data["popular"].length; i++) {
                                        popular_html = popular_html + '<div class="nearby_person"><a href="' + data["popular"][i]["url"] + '"><img class="nearby_pic" src="' + data["popular"][i]["pic"] + '"></a> <a href="' + data["popular"][i]["url"] + '">' + data["popular"][i]["name"] + '</a> (' + data["popular"][i]["count"] + ')</div>';
                                    }

                                    popular_html += "</div>";
                                    $("#nearby_users").after(popular_html);

                                    $("#nearby_popular").click(function (e) {
                                        e.preventDefault();
                                        $("#nearby_popular_list").dialog({
                                            modal:true,
                                            height:400,
                                            closeOnEscape:true
                                        });
                                        return false;
                                    })
                                }
                            }
                        }
                    });
                }

                if ((typeof loadState["<%= @user.username %>"]['server'] !== "undefined") && (typeof loadState["<%= @user.username %>"]['infowindow'] !== "undefined") && loadState["<%= @user.username %>"]['server'] === true) {
                    var mapTop = map.getBounds().getNorthEast().lat();
                    var mapBottom = map.getBounds().getSouthWest().lat();
                    var newCenter = new google.maps.LatLng(mapTop - 0.25 * (mapTop - mapBottom), map.getCenter().lng());
                    map.setCenter(newCenter);
                    loadState["<%= @user.username %>"]['server'] = false;
                }

                if ((typeof topLat === "undefined") || (typeof bottomLat === "undefined") || (typeof rightLng === "undefined") || (typeof leftLng === "undefined")) {
                    callServer = true;
                }

                if (callServer === false) {
                    var updatedTopLat = bounds.getNorthEast().lat();
                    var updatedBottomLat = bounds.getSouthWest().lat();
                    var updatedRightLng = bounds.getNorthEast().lng();
                    var updatedLeftLng = bounds.getSouthWest().lng();

                    if ((updatedTopLat > topLat) || (updatedBottomLat < bottomLat)) {
                        callServer = true;
                    }

                    if (callServer === false) {
                        if (updatedRightLng > rightLng || updatedLeftLng < leftLng) {
                            callServer = true;
                        }
                    }
                }

                if (callServer == true) {
                    requests += 1;
                    if (requests > 0) {
                        $('#spinner').show();
                    }

                    if ((typeof topLat === "undefined") || (typeof bottomLat === "undefined") || (typeof rightLng === "undefined") || (typeof leftLng === "undefined")) {
                        var updatedTopLat = Math.min(bounds.getNorthEast().lat() + 2 * (bounds.getNorthEast().lat() - bounds.getSouthWest().lat()), 90);
                        var updatedBottomLat = Math.max(bounds.getSouthWest().lat() - 2 * (bounds.getNorthEast().lat() - bounds.getSouthWest().lat()), -90);
                        var updatedRightLng = bounds.getNorthEast().lng() + (bounds.getNorthEast().lng() - bounds.getSouthWest().lng());
                        var updatedLeftLng = bounds.getSouthWest().lng() - (bounds.getNorthEast().lng() - bounds.getSouthWest().lng());
                        if (updatedRightLng > 0) {
                            updatedRightLng = Math.min(180, updatedRightLng);
                        }
                        if (updatedRightLng < 0) {
                            updatedRightLng = Math.max(-180, updatedRightLng);
                        }
                        if (updatedLeftLng > 0) {
                            updatedLeftLng = Math.min(180, updatedLeftLng);
                        }
                        if (updatedLeftLng < 0) {
                            updatedLeftLng = Math.max(-180, updatedLeftLng);
                        }
                    } else {
                        var updatedTopLat = bounds.getNorthEast().lat();
                        var updatedBottomLat = bounds.getSouthWest().lat();
                        var updatedRightLng = bounds.getNorthEast().lng();
                        var updatedLeftLng = bounds.getSouthWest().lng();
                    }

                    // Account for loading in list view
                    if (updatedTopLat === updatedBottomLat) {
                        updatedTopLat += initialOffset;
                        updatedBottomLat -= initialOffset;
                    }
                    if (updatedLeftLng === updatedRightLng) {
                        updatedLeftLng -= initialOffset;
                        updatedRightLng += initialOffset;
                    }

                    $.ajax({
                        url:'<%= bounds_user_path(@user) %>',
                        data:{
                            top_lat:updatedTopLat,
                            bottom_lat:updatedBottomLat,
                            right_lng:updatedRightLng,
                            left_lng:updatedLeftLng
                        },
                        dataType:"json",
                        type:"GET",
                        error:function (jqXHR, textStatus, errorThrown) {
                            console.debug(textStatus, errorThrown);
                        },
                        success:function (data) {
                            updatePerspectives(data.perspectives);
                            updateList(data.perspectives, (bounds.getNorthEast().lat() + bounds.getSouthWest().lat()) / 2, (bounds.getNorthEast().lng() + bounds.getSouthWest().lng()) / 2);
                            requests -= 1;
                            if (requests <= 0) {
                                $('#spinner').hide();
                            }
                            if ((typeof topLat === "undefined") || (typeof bottomLat === "undefined") || (typeof rightLng === "undefined") || (typeof leftLng === "undefined")) {
                                topLat = updatedTopLat,
                                        bottomLat = updatedBottomLat,
                                        rightLng = updatedRightLng,
                                        leftLng = updatedLeftLng
                            } else {
                                if (updatedTopLat > topLat) {
                                    topLat = updatedTopLat;
                                }
                                if (updatedBottomLat < bottomLat) {
                                    bottomLat = updatedBottomLat;
                                }
                                if (updatedRightLng > rightLng) {
                                    rightLng = updatedRightLng;
                                }
                                if (updatedLeftLng < leftLng) {
                                    leftLng = updatedLeftLng;
                                }
                            }
                            if (!$('.map_filter_button').is(":visible")) {
                                $(window).resize();

                                $('.map_filter_button').fadeIn(100);

                                // First run
                                var startState = JSON.parse($.cookie('page_state'));
                                if (startState !== null && typeof startState["<%= @user.username %>"] !== "undefined") {
                                    if (typeof startState["<%= @user.username %>"]["location"] !== "undefined") {
                                        if (startState["<%= @user.username %>"]["location"] === "places") {
                                            $(window).delay(100).queue(function () {
                                                $('#name_filter_link').click();
                                                $(this).dequeue();
                                            });
                                        } else if (startState["<%= @user.username %>"]["location"] === "photos") {
                                            $(window).delay(100).queue(function () {
                                                $('#photo_filter_link').click();
                                                $(this).dequeue();
                                            });
                                        }
                                    }
                                }
                            }
                        }
                    });
                } else {
                    var bounds = map.getBounds();
                    var data = [];
                    for (var persp in persps) {
                        data.push(persps[persp])
                    }

                    updateList(data, (bounds.getNorthEast().lat() + bounds.getSouthWest().lat()) / 2, (bounds.getNorthEast().lng() + bounds.getSouthWest().lng()) / 2);
                    updateMap();
                }
            });

            $('#name_filter_link').click(function (e) {
                loadState["<%= @user.username %>"]['location'] = 'places';
                e.preventDefault();

                if ($('#name_filter_bubble').is(':visible')) {
                    $('#name_filter_bubble').fadeOut(100);
                    delete loadState["<%= @user.username %>"]['location'];
                } else {
                    if ($('#photo_filter_bubble').is(':visible')) {
                        $('#photo_filter_bubble').fadeOut(100);
                    }
                    updatePlaces();
                    $('#name_filter_bubble').fadeIn(100);
                    google.maps.event.trigger(map, 'idle');
                }
                return false;
            });

            $('#photo_filter_link').click(function (e) {
                loadState["<%= @user.username %>"]['location'] = 'photos';
                e.preventDefault();

                if ($('#photo_filter_bubble').is(':visible')) {
                    $('#photo_filter_bubble').fadeOut(100);
                    delete loadState["<%= @user.username %>"]['location'];
                } else {
                    if ($('#name_filter_bubble').is(':visible')) {
                        $('#name_filter_bubble').fadeOut(100);
                    }
                    updatePhotos();
                    $('#photo_filter_bubble').fadeIn(100);
                    google.maps.event.trigger(map, 'idle');
                }
                return false;
            });

            $('.home').click(function (e) {
                e.preventDefault();
                var center = new google.maps.LatLng(user_lat, user_lng);
                map.setCenter(center);
                map.setZoom(DEFAULT_ZOOM);
                return false;
            });

            var coords = JSON.parse($.cookie('location'));
            if ((typeof coords['remote_ip'] !== "undefined") || (typeof coords['browser'] !== "undefined") || navigator.geolocation) {
                $('#map_holder').append('<div id="current_location"><a href="/" class="pan"><img class="pan_img" src="<%= asset_path("pan.png"); %>"></a></div>');
                $('#current_location').width(30);
                $('#current_location').css({
                    'position':'absolute',
                    'z-index':'10003',
                    'left':338,
                    'top':$('#header').outerHeight(true) + $('#userdetails').outerHeight(true) + $('#main_map').outerHeight(true) - $('#current_location').height() - CURRENT_LOCATION_OFFSET,
                });

                $('#name_and_description').prepend('<div id="mini_current_location"><a href="/" class="pan"><img class="pan_img" src="<%= asset_path("pan.png"); %>"></a></div>');
                $('#mini_current_location').width(30);
                $('#mini_current_location').css({
                    'float':'right',
                    'margin-right':5,
                    'margin-top':10
                });
                $('#name_and_description').css({
                    'margin-right':45
                })

                // Assign callback
                $('.pan').click(function (e) {
                    $('#list').html('<div id="mini_spinner"><img class="spinner" src="<%= asset_path("spinner.gif"); %>"></div>')
                    e.preventDefault();
                    if (typeof coords['browser'] !== "undefined") {
                        var center = new google.maps.LatLng(parseFloat(coords['browser']['lat']), parseFloat(coords['browser']['lng']));
                        map.setCenter(center);
                        map.setZoom(DEFAULT_ZOOM);
                    } else if (typeof coords['remote_ip'] !== "undefined") {
                        if (navigator.geolocation && typeof coords['denied'] === "undefined") {
                            navigator.geolocation.getCurrentPosition(
                                    function (position) {
                                        coords['browser'] = {}
                                        coords['browser']['lat'] = position.coords.latitude;
                                        coords['browser']['lng'] = position.coords.longitude;

                                        $.cookie('location', JSON.stringify(coords), {path:'/'});

                                        var center = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                                        map.setCenter(center);
                                    },
                                    function (error) {
                                        switch (error.code) {
                                            case error.PERMISSION_DENIED:
                                                coords['denied'] = true;
                                                $.cookie('location', JSON.stringify(coords), {path:'/'});
                                                break;
                                        }
                                    }
                            );
                        }

                        var center = new google.maps.LatLng(parseFloat(coords['remote_ip']['lat']), parseFloat(coords['remote_ip']['lng']));
                        map.setCenter(center);
                        map.setZoom(DEFAULT_ZOOM);
                    } else {
                        if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(function (position) {
                                coords['browser'] = {}
                                coords['browser']['lat'] = position.coords.latitude;
                                coords['browser']['lng'] = position.coords.longitude;

                                $.cookie('location', JSON.stringify(coords), {path:'/'});

                                var center = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                                map.setCenter(center);
                            });
                        }
                    }
                    return false;
                });
            }

            $('#magazine').click(function () {
                var lat = map.getCenter().lat();
                var lng = map.getCenter().lng();

                if (typeof loadState["<%= @user.username %>"]['infowindow'] !== "undefined") {
                    lat = infowindow.getPosition().lat();
                    lng = infowindow.getPosition().lng();
                    delete loadState["<%= @user.username %>"]['infowindow'];
                }
                $.cookie('page_state', JSON.stringify(loadState), {path:'/'});
                $(this).attr("href", $(this).attr("href") + "?lat=" + lat + "&lng=" + lng);
            })

            $('#tag_filter_link').click(function (e) {
                e.preventDefault();
                if (infowindow.getMap()) {
                    infowindow.close();
                    delete loadState["<%= @user.username %>"]['infowindow'];
                }
                if ($('#photo_filter_bubble').is(':visible')) {
                    $('#photo_filter_bubble').fadeOut(100);
                }
                if ($('#name_filter_bubble').is(':visible')) {
                    $('#name_filter_bubble').fadeOut(100);
                }

                if ($('#filter_bubble').is(':visible')) {
                    hideFilters();
                } else {
                    $('#filter_bubble').fadeIn(100);
                    $('#grey_arrow_left').fadeIn(100);
                }
                return false;
            });
        }

        $(document).ready(function () {
            initialize();

            $('#map_holder').append('<div id="spinner"><img class="spinner" src="<%= asset_path("spinner.gif"); %>"></div>');
            $('#spinner').width(80);
            $('#spinner').css({
                'position':'absolute',
                'z-index':'10003'
            });
            $('#spinner').hide();

            $(window).resize(function () {
                if ($(window).width() > iPadWidth) {
                    $("body").css("overflow", "hidden");
                } else {
                    $("body").css("overflow", "auto");
                }

                $('#main_map').width($('#map_holder'))
                $('#main_map').height($(window).height() - $('#header').outerHeight(true) - $('#footerbottom').height());
                var height = $(window).height() - $('#header').outerHeight(true) - $('#footerbottom').outerHeight();
                var user_padding = $('#user_details').outerHeight() - $('#user_details').height();
                $('#user_details').height(height - user_padding);

                $('#current_location').css({
                    'top':$('#header').outerHeight(true) + $('#userdetails').outerHeight(true) + $('#main_map').outerHeight(true) - $('#current_location').outerHeight(true) - CURRENT_LOCATION_OFFSET,
                });

                if ($(window).width() > iPadWidth) {
                    $('#spinner').css({
                        'left':333,
                        'top':$('#header').outerHeight(true) + $('#userdetails').outerHeight(true) + $('#main_map').outerHeight(true) - $('#current_location').height() - SPINNER_OFFSET
                    });
                }

                $('#photo_filter').css({
                    'left':$(window).width() - $('#photo_filter').width() - RIGHT_GAP,
                })

                $('#photo_filter_bubble').css({
                    'left':$('#photo_filter').offset().left + $('#photo_filter').outerWidth(true) - $('#photo_filter_bubble').outerWidth(true),
                    'top':$('#photo_filter').offset().top + $('#photo_filter').outerHeight(true)
                })

                $('#name_filter').css({
                    'left':parseInt($('#photo_filter').css('left')) - $('#name_filter').width() - RIGHT_GAP,
                })

                $('#name_filter_bubble').css({
                    'left':$('#name_filter').offset().left + $('#name_filter').outerWidth(true) - $('#name_filter_bubble').outerWidth(true),
                    'top':$('#name_filter').offset().top + $('#name_filter').outerHeight(true)
                })

                $('.list_filter_values').css({
                    'max-height':300,
                });

                $('#place_list_items').css({
                    'max-height':$('#name_filter_values').innerHeight() - $('#place_list_header').innerHeight(),
                    'padding-top':0,
                    'padding-left':0,
                });
                $('#photo_list_items').css({
                    'max-height':$('#photo_filter_values').innerHeight() - $('#photo_list_header').innerHeight(),
                    'padding-left':1,
                    'padding-top':1
                });
            });

            $(window).resize();
        });

        $(window).load(function () {
            if ($(window).width() > iPadWidth) {
                callToDownload(5000);
            }
        });
    </script>
<% end %>

<div id="user_and_list">
  <div id="mini_user_details">
    <div id="list_profile_pic">
      <%= image_tag @user.thumb_url, :alt => "Pic", :class => "profile_pic" %>
    </div>
    <div id="name_and_description">
      <div id="username_list"><%= @user.username %></div>
      <div class="description_list"><%= @user.description %></div>
    </div>
  </div>
  <div id="list">
    <div id="mini_spinner"><img class="spinner" src="<%= asset_path("spinner.gif"); %>"></div>
  </div>
</div>
<div id="user_and_map">
  <div id="user_details">
    <div class="toggle_view">
      <ul class="location_types">
        <li class="left inactive">
          <span class="type"><%= t('user.nearby') %></span>
        </li>
        <li class="right active">
          <a class="active" id="magazine" href="<%= magazine_user_path(@user) %>"><span class="type"><%= t('user.recent') %></span></a>
        </li>
      </ul>
    </div>
    <%= render :partial => "detail", :locals => {:user => @user} %>
    <div id="nearby_users"></div>
  </div>
  <div id="map_holder">
    <div id="tag_filter" class="map_filter_button">
      <a href="#" id="tag_filter_link"><%= image_tag asset_path("tag_icon.png") %></a>
    </div>
    <div id="grey_arrow_left" class="arrow"></div>
    <div id="red_arrow_left" class="arrow"></div>
    <div id="filter_bubble"></div>
    <div id="name_filter" class="map_filter_button">
      <a href="#" id="name_filter_link"><%= image_tag asset_path("places_list.png") %></a>
    </div>
    <div id="name_filter_bubble">
      <div id="name_filter_arrow">
        <%= image_tag asset_path("grey_arrow_top.png"), :class => 'list_filter_arrow' %>
      </div>
      <div id="name_filter_values" class="list_filter_values"></div>
    </div>
    <div id="photo_filter" class="map_filter_button">
      <a href="#" id="photo_filter_link"><%= image_tag asset_path("pictures.png") %></a>
    </div>
    <div id="photo_filter_bubble">
      <div id="photo_filter_arrow">
        <%= image_tag asset_path("grey_arrow_top.png"), :class => 'list_filter_arrow' %>
      </div>
      <div id="photo_filter_values" class="list_filter_values"></div>
    </div>
    <div id="main_map"></div>
  </div>
</div>
<%= render :partial => "layouts/download", :locals => {:user => @user} %>