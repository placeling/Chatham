<% content_for :head do %>
  <title><%= t('user.user_head', {:user => @user.username}) %></title>
  <meta name="description" content="<%= t('user.description', {:user => @user.username, :desc => @user.description}) %>">
  <meta property="og:title" content="<%= t('user.user_head', {:user => @user.username}) %>"/>
  <meta property="og:url" content="https://www.placeling.com<%= user_path(@user) %>"/>
  <meta property="og:type" content="person">
  <meta property="og:image" content="<%=  @user.thumb_url %>"/>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<% end %>

<% content_for :javascript_includes do %>
  <script type="text/javascript"
    src="http://maps.googleapis.com/maps/api/js?key=AIzaSyCtWBCKJwtHq7ME82vk3d7eUsRknvzgrAQ&sensor=false">
  </script>
  <script type="text/javascript">
    var months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    
    function compare(a,b) {
      if (a.lower_name < b.lower_name)
         return -1;
      if (a.lower_name > b.lower_name)
        return 1;
      return 0;
    }
    
    function filter_term(a,b) {
      if (a.term < b.term)
        return -1;
      if (a.term > b.term)
        return 1;
      return 0;
    }
    
    function filter_count(a,b) {
      if (a.count > b.count)
        return -1;
      if (a.count < b.count)
        return 1;
      if (a.count == b.count) {
        if (a.term < b.term)
          return -1;
        if (a.term > b.term)
          return 1;
        return 0;
      }
    }
    
    var persps = [];
    <% @user.perspectives.each_with_index do |perspective, index| %>
      perp = {
        "name" : "<%= perspective.place.name %>",
        "name_encoded" : "<%= u perspective.place.name %>",
        "uid" : "<%= perspective.id %>",
        "lower_name" : "<%= perspective.place.name.downcase %>",
        "url": "<%= perspective_path(perspective) %>",
        "lat" : <%= perspective.place.location[0] %>,
        "lng" : <%= perspective.place.location[1] %>,
        <% if perspective.place.street_address %>
          "address" : "<%= perspective.place.street_address %>",
        <% end %>
        "categories" : [],
        "tags" : [],
        "photos" : [],
        "modified" : "<%= perspective.updated_at.strftime('%B %e, %Y') %>",
        <% if !perspective.memo.nil? && perspective.memo.length > 0 %>
          "memo" : '<%= escape_javascript(simple_format(perspective.memo))  %>',
        <% end %>
        <% if !perspective.url.nil? && perspective.url.length > 0 %>
          "remote_url" : '<%= perspective.url %>',
        <% end %>
        <% if current_user == @user %>
          "edit" : '<%= edit_perspective_path(perspective) %>',
          "delete" : '<%= link_to "Delete", perspective, :confirm => t("basic.are_you_sure"), :method => :delete, :class => "info_act" %>',
        <% else %>
          "flag" : '<%= link_to(t("perspective.flag"), flag_perspective_path(perspective), :confirm =>t("perspective.flag_confirm"), :method=>"post", :remote=>"true", :class=>"info_act")%>',
          <% if (!perspective.memo.nil?) || (perspective.pictures.length > 0) %>
            <% if current_user && perspective.su.include?(current_user.id) %>
              "star" : '<%= unstar_perspective_path(perspective) %>',
              "starred" : true,
            <% else %>
              "star" : '<%= star_perspective_path(perspective) %>',
              "starred" : false,
            <% end %>
          <% end %>
        <% end %>
      }
      
      <% perspective.place.venue_types.each do |type| %>
        <% if type.downcase != 'establishment' %>
          perp.categories.push("<%= type.downcase %>");
        <% end %>
      <% end %>
      
      <% if perspective.tags %>
        <% perspective.tags.each do |tag| %>
          perp.tags.push("<%= tag.downcase %>")
        <% end %>
      <% end %>
      
      <% perspective.pictures.each do |pic| %>
        <% if !pic.deleted %>
          perp.photos.push({"thumb" : "<%= pic.thumb_url %>", "main" : "<%= pic.main_url %>"});
        <% end %>
      <% end %>
      
      persps.push(perp)
    <% end %>
    
    persps = persps.sort(compare);
    
    function checkMarker(persp, pageState) {
      if (typeof pageState['filterValue'] === "undefined") {
        return true;
      }
      
      var filterTerm = pageState['filterValue'];
      var filterType = pageState['filterType'];
      
      var pass = false;
      
      if (filterType === 'tag') {
        if (persp.tags.length > 0) {
          for (var j=0; j<persp.tags.length; j++) {
            if (persp.tags[j] === filterTerm) {
              pass = true;
            }
          }
        }
      } else if (filterType === 'category') {
        if (persp.categories.length > 0) {
          for (var j=0; j<persp.categories.length; j++) {
            if (persp.categories[j] === filterTerm) {
              pass = true;
            }
          }
        }
      }
      
      if (pass === true) {
        return true;
      } else {
        return false;
      }
    }
    
    function initialize() {
      var loadState = JSON.parse($.cookie('page_state'));
      if (loadState === null) {
        loadState = {};
      }
      
      if (typeof loadState["<%= @user.username %>"] === "undefined") {
        loadState["<%= @user.username %>"] = {};
      }
      
      <% if @current_location.length > 0 %>
        var lat = <%= @current_location[0] %>;
        var lng = <%= @current_location[1] %>;
      <% else %>
        <% if @user.location && @user.location.length == 2 %>
          var lat = <%= @user.location[0] %>;
          var lng = <%= @user.location[1] %>;
        <% else %>
          // If no lat/lng, send to the location of their first perspective
          var lat = 0;
          var lng = 0;
          if (persps.length > 0) {
            lat = persps[0].lat;
            lng = persps[0].lng;
          } else {
            lat = 49.2;
            lng = -123.2;
          }
        <% end %>
      <% end %>
      
      var filters = {
        'categories' : [],
        'tags' : []
      }
      
      var zoom = 15;
      
      if (typeof loadState["<%= @user.username %>"]['zoom'] !== "undefined") {
        zoom = loadState["<%= @user.username %>"]['zoom'];
      }
      
      if (typeof loadState["<%= @user.username %>"]['sort'] === "undefined") {
        loadState["<%= @user.username %>"]['sort'] = 'count';
      }
      
      var myOptions = {
        center: new google.maps.LatLng(lat, lng),
        zoom: zoom,
        panControl: false,
        mapTypeControl: false,
        scaleControl: false,
        streetViewControl: false,
        overviewMapControl: false,
        zoomControlOptions: {
          position: google.maps.ControlPosition.LEFT_CENTER
        },
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      var map = new google.maps.Map(document.getElementById("main_map"), myOptions);
            
      var placemark = new google.maps.MarkerImage(
        '/images/placemarker.png',
        new google.maps.Size(30,32),
        new google.maps.Point(0, 0),
        new google.maps.Point(9, 32)
      );
      
      var shape = {
        coord: [1,1,1,15,6,20,9,30,12,20,18,15,18,1],
        type: 'poly'
      };
      
      var infowindow = new google.maps.InfoWindow({});
      
      google.maps.event.addListener(map, 'click', function() {
        infowindow.close();
        delete loadState["<%= @user.username %>"]['infowindow'];
        google.maps.event.trigger(map, 'idle');
      });
      
      google.maps.event.addListener(infowindow, 'closeclick', function() {
        delete loadState["<%= @user.username %>"]['infowindow'];
        google.maps.event.trigger(map, 'idle');
      })
      
      function createMarker(perspective) {
        var marker = new google.maps.Marker({
          position: new google.maps.LatLng(perspective.lat, perspective.lng),
          icon: placemark,
          shape: shape,
          map: map,
          title: perspective.name
        });
        google.maps.event.addListener(marker, 'click', function(){
          if (infowindow.getMap() && infowindow.getPosition() === marker.getPosition()) {
            infowindow.close();
            delete loadState["<%= @user.username %>"]['infowindow'];
          } else {
            var infoWindowHTML = '<div class="info_window">';
            
            // Edit vs. star
            if (typeof perspective.edit === "undefined") {
              if (typeof perspective.memo !== "undefined" || perspective.photos.length > 0) {
                if (perspective.starred == true) {
                  var action = '<div class="info_action"><a href="' + perspective.star + '" data-method="post" data-remote="true" rel="nofollow"><img class="info_img" src="/images/starred.png"></a></div>';
                } else {
                  var action = '<div class="info_action"><a href="' + perspective.star + '" data-method="post" data-remote="true" rel="nofollow"><img class="info_img" src="/images/unstarred.png"></a></div>';
                }
                infoWindowHTML += action;
              }
            } else {
              var action = '<div class="info_action"><a href="' + perspective.edit + '"><img class="info_img" src="/images/pencil_24.png"></a></div>';
              infoWindowHTML += action;
            }
            
            infoWindowHTML += '<div class="info_name">' + perspective.name + '</div>';
            
            if (perspective.categories.length > 0 || perspective.tags.length > 0) {
              infoWindowHTML += '<div class="info_cat_and_tags">';
              if (perspective.categories.length > 0) {
                infoWindowHTML += '<span class="info_cat">';
                infoWindowHTML += perspective.categories.join('</span>, <span class="info_cat">');
                infoWindowHTML += '</span>';
                if (perspective.tags.length > 0) {
                  infoWindowHTML += ' | ';
                }
              }
              if (perspective.tags.length > 0) {
                infoWindowHTML += '<span class="info_tag">#';
                infoWindowHTML += perspective.tags.join('</span>, <span class="info_tag">#');
                infoWindowHTML += '</span>';
              }
              infoWindowHTML += '</div>';
            }
            
            if (typeof perspective.memo !== "undefined") {
              infoWindowHTML += '<div class="info_memo">' + perspective.memo + '</div>';
            }
            
            if (typeof perspective.remote_url !== "undefined") {
              infoWindowHTML += '<div class="info_url"><a href="' + perspective.remote_url + '"><%= t('perspective.web_link') %></a></div>';
            }
            
            if (perspective.photos.length > 0) {
              var pics = '<div class="info_pics lightboxGallery">';
              for (var i=0; i<perspective.photos.length; i++) {
                pics += '<span class="info_pic"><a href="'+ perspective.photos[i].main + '" class="lightbox"><img class="info_pic_thumb" src="' + perspective.photos[i].thumb + '"></a></span>';
              }
              pics += '</div>';
              infoWindowHTML += pics;
            }
            
            var share = '<div class="info_action"><span class="social"><a href="https://twitter.com/share?url=http://www.placeling.com' + perspective.url + '&text=' + perspective.name_encoded + '" onclick="var D=550,A=450,C=screen.height,B=screen.width,H=Math.round((B/2)-(D/2)),G=0,F=document;window.open(this.href, \'\', \'left=\'+H+\',top=\'+G+\',width=\'+D+\',height=\'+A+\',personalbar=0,toolbar=0,scrollbars=1,resizable=1\');return false;"><img src="/images/twitter.png" class="info_icon"></a></span>';
            
            share += '<span class="social"><a href="" onclick="javascript:var d=document,f=\'https://www.facebook.com/share\',l=d.location,e=encodeURIComponent,p=\'.php?src=bm&v=4&i=1323211438&u=\'+e(\'http://www.placeling.com' + perspective.url + '\')+\'&t=\'+e(\'' + perspective.name_encoded + '\');1;try{if (!/^(.*\.)?facebook\.[^.]*$/.test(l.host))throw(0);share_internal_bookmarklet(p)}catch(z) {a=function() {if (!window.open(f+\'r\'+p,\'sharer\',\'toolbar=0,status=0,resizable=1,width=626,height=436\'))l.href=f+p};if (/Firefox/.test(navigator.userAgent))setTimeout(a,0);else{a()}}void(0);return false"><img src="/images/facebook.png" class="info_icon"></a></span>';
            
            share += '<span><a href=\"http://www.placeling.com' + perspective.url + '" onclick="javascript:return false;" class="email"><img src="/images/email.png" class="info_icon"></a></span>';
            
            share += "</div>";
            
            infoWindowHTML += share;
            
            var mod_action = '<div class="info_update"><span class="info_mod">' + perspective.modified + '</span>';
            
            if (typeof perspective.edit === "undefined") {
              mod_action += perspective.flag;
            } else {
              mod_action += perspective.delete;
            }
            
            mod_action += '</div>';
            
            infoWindowHTML += mod_action;
            
            infoWindowHTML += '</div>';
            
            infowindow.setContent(infoWindowHTML);
            infowindow.open(map, marker);
            loadState["<%= @user.username %>"]['infowindow'] = perspective["uid"];
            infowindow.setPosition(marker.getPosition());
            google.maps.event.trigger(map, 'idle');
            
            $('.lightboxGallery').each(function(){
              $('.lightbox', this).lightBox();
            });
            
            $('.email').each(function() {
              $(this).qtip({
                content: '<span class="link_holder"><span class="link_header">Link:</span><input type="text" value="'+ $(this).attr("href") + '" class="link_text"></span>',
                 position: {
                   my: 'bottom center',
                   at: 'top center'
                 },
                 show: {
                   event: 'click',
                   solo: true
                 },
                 hide: {
                   event: 'click'
                 },
                 style: {
                   classes: 'ui-tooltip-rounded ui-tooltip-shadow',
                 }
              });
            });
          }
        });
        marker.setVisible(false);
        return marker;
      }
      
      for (var i=0; i < persps.length; i++) {
        persps[i]["marker"] = createMarker(persps[i]);
        
        // Check for filters
        if (checkMarker(persps[i], loadState["<%= @user.username %>"]) === true) {
          persps[i]["marker"].setVisible(true);
        } else {
          persps[i]["marker"].setVisible(false);
        };
        
        if (typeof loadState["<%= @user.username %>"]['infowindow'] !== "undefined") {
          if (persps[i]["uid"] === loadState["<%= @user.username %>"]['infowindow']) {
            google.maps.event.trigger(persps[i]["marker"], 'click');
          }
        }
      }
      
      google.maps.event.addListener(map, 'idle', function() {
        var bounds = map.getBounds();
        
        loadState["<%= @user.username %>"]['lat'] = map.getCenter().lat();
        loadState["<%= @user.username %>"]['lng'] = map.getCenter().lng();
        loadState["<%= @user.username %>"]['zoom'] = map.getZoom();
        
        var filterTerm = loadState["<%= @user.username %>"]['filterValue'];
        var filterType = loadState["<%= @user.username %>"]['filterType'];
        for (var i=0; i < persps.length; i++) {
          if (bounds.contains(persps[i]["marker"].getPosition())) {
            if (typeof filterTerm === "undefined") {
              if (persps[i]["marker"].getVisible() === false) {
                persps[i]["marker"].setVisible(true);
              }
            } else {
              var pass = false;
              if (filterType === 'tag') {
                if (persps[i].tags.length > 0) {
                  for (var j=0; j<persps[i].tags.length; j++) {
                    if (persps[i].tags[j] === filterTerm) {
                      pass = true;
                    }
                  }
                }
              } else if (filterType === 'category') {
                if (persps[i].categories.length > 0) {
                  for (var j=0; j<persps[i].categories.length; j++) {
                    if (persps[i].categories[j] === filterTerm) {
                      pass = true;
                    }
                  }
                }
              }
              
              if (pass === true && persps[i]["marker"].getVisible() === false) {
                persps[i]["marker"].setVisible(true);
              } else if (pass === false && persps[i]["marker"].getVisible() === true) {
                persps[i]["marker"].setVisible(false);
                if (persps[i]["uid"] === loadState["<%= @user.username %>"]['infowindow']) {
                  infowindow.close();
                  delete loadState["<%= @user.username %>"]['infowindow'];
                }
              }
            }
          } else {
            if (persps[i]["marker"].getVisible() === true) {
              persps[i]["marker"].setVisible(false);
              if (persps[i]["uid"] === loadState["<%= @user.username %>"]['infowindow']) {
                infowindow.close();
                delete loadState["<%= @user.username %>"]['infowindow'];
              }
            }
          }
        }
        
        if (infowindow.getMap()) {
          if (bounds.contains(infowindow.getPosition()) === false) {
            infowindow.close();
            delete loadState["<%= @user.username %>"]['infowindow'];
          }
        }
        
        $.cookie('page_state', JSON.stringify(loadState), {path:'/'});
        
        if ($('#filters').height() > 0) {
          if (typeof loadState["<%= @user.username %>"]['sort'] !== "undefined") {
            if (loadState["<%= @user.username %>"]['sort'] === 'count') {
              updateFilters(true);
            } else {
              updateFilters();
            }
          }
        }
        
        if (loadState["<%= @user.username %>"]['location'] === 'places') {
          updatePlaces();
        } else if (loadState["<%= @user.username %>"]['location'] === 'photos') {
          updatePhotos();
        }        
      });
      
      function updateFilters(sortDown) {
        filters['categories'] = {};
        filters['tags'] = {};
        
        var bounds = map.getBounds();
        for (var i=0; i < persps.length; i++) {
          if (bounds.contains(persps[i]["marker"].getPosition())) {
            // Create categories
            if (persps[i].categories.length > 0) {
              for (var j=0; j < persps[i].categories.length; j++) {
                if (filters['categories'][persps[i].categories[j]]) {
                  filters['categories'][persps[i].categories[j]] += 1;
                } else {
                  filters['categories'][persps[i].categories[j]] = 1;
                }
              }
            }
            
            if (persps[i].tags.length > 0) {
              for (var j=0; j <persps[i].tags.length; j++) {
                if (filters['tags'][persps[i].tags[j]]) {
                  filters['tags'][persps[i].tags[j]] += 1;
                } else {
                  filters['tags'][persps[i].tags[j]] = 1;
                }
              }
            }
          }
        }
        
        var clean_filters = [];
        
        for (var cat in filters['categories']) {
          clean_filters.push({'term':cat,'type':'category','count':filters['categories'][cat]});
        }
        
        for (var tag in filters['tags']) {
          clean_filters.push({'term':tag,'type':'tag','count':filters['tags'][tag]});
        }
        
        if (typeof loadState["<%= @user.username %>"]['filterType'] !== "undefined") {
          if (loadState["<%= @user.username %>"]['filterType'] === "category") {
            if (typeof filters['categories'][loadState["<%= @user.username %>"]['filterValue']] === "undefined") {
              clean_filters.push({'term':loadState["<%= @user.username %>"]['filterValue'],'type':'category','count':0});
            }
          } else if (loadState["<%= @user.username %>"]['filterType'] === "tag") {
            if (typeof filters['tags'][loadState["<%= @user.username %>"]['filterValue']] === "undefined") {
              clean_filters.push({'term':loadState["<%= @user.username %>"]['filterValue'],'type':'tag','count':0});
            }
          }
        }
        
        var html = "";
        if (clean_filters.length == 0) {
          html += '<div class="no_places"><%= t('perspective.no_categories') %></div>';
        } else {
          var filterTerm = loadState["<%= @user.username %>"]['filterValue'];
          var filterType = loadState["<%= @user.username %>"]['filterType'];
          
          if (loadState["<%= @user.username %>"]['sort'] !== 'alpha') {
            html += '<div id="sort_type">Sort: <a href="/" id="sort_alpha">abc</a> 321</div>';
            clean_filters.sort(filter_count);            
          } else {
            html += '<div id="sort_type">Sort: abc <a href="/" id="sort_count">321</a></div>';
            clean_filters.sort(filter_term);
          }
          
          for (var i=0; i<clean_filters.length; i++) {
            var chosen = false;
            if (typeof filterTerm !== "undefined" && typeof filterType != "undefined") {
              if (clean_filters[i]["type"] === filterType && clean_filters[i]["term"] === filterTerm) {
                chosen = true;
              }
            }
            
            if (chosen === true) {
              html += '<div class="filter selected">';
            } else {
              html += '<div class="filter">'
            }
            
            html += '<a href="/" class="filter_value">';
            if (clean_filters[i]["type"] === 'tag') {
              html += "#";
            }
            html += clean_filters[i]["term"];
            html += '</a> <span class="filter_count">(';
            html += clean_filters[i]["count"];
            html += ')</span>';
            if (chosen === true) {
              html+= ' <a href="/" id="show_all_filters"><%= t("perspective.show_all") %></a>';
            }
            
            html += "</div>";
          }
        }
        
        $('#filters').html(html);
        
        $('.filter_value').each(function() {
          $(this).click(function(e) {
            e.preventDefault();
            var term = $(this).text();
            if (term.charAt(0) === "#") {
              loadState["<%= @user.username %>"]['filterType'] = 'tag';
              loadState["<%= @user.username %>"]['filterValue'] = term.substr(1,term.length-1);
            } else {
              loadState["<%= @user.username %>"]['filterType'] = 'category';
              loadState["<%= @user.username %>"]['filterValue'] = term;
            }
            google.maps.event.trigger(map, 'idle');
            return false;
          })
        })
        
        $('#sort_count').click(function(e) {
          e.preventDefault();
          loadState["<%= @user.username %>"]['sort'] = 'count';
          updateFilters(true);
          google.maps.event.trigger(map, 'idle');
          return false;
        });
        
        $('#sort_alpha').click(function(e) {
          e.preventDefault();
          loadState["<%= @user.username %>"]['sort'] = 'alpha';
          updateFilters();
          google.maps.event.trigger(map, 'idle');
          return false;
        })
        
        $('#show_all_filters').click(function(e) {
          e.preventDefault();
          delete loadState["<%= @user.username %>"]['filterType'];
          delete loadState["<%= @user.username %>"]['filterValue'];
          google.maps.event.trigger(map, 'idle');
          return false;
        });        
      }
      
      function updatePlaces() {
        var count = 0;
        var locationHTML = "";
        for (var i=0; i<persps.length; i++) {
          if (persps[i]["marker"].getVisible() === true) {
            var html = '<div class="map_place_holder"><a href="/" class="map_place even_link" id="' + i + '"><div>' + persps[i]["name"];
            if (persps[i]["address"]) {
              html += '<div class="map_address">';
              html += persps[i]["address"];
              html += '</div>'
            }
            html += '</div></a></div>';
            locationHTML += html;
            count += 1;
          }
        }
        
        if (count == 0) {
          locationHTML = '<div class="no_places"><%= t("perspective.no_places") %></div>';
        }
        
        $('#locations').html(locationHTML);
        
        $('.map_place').each(function(e) {
          $(this).click(function(e) {
            e.preventDefault();
            google.maps.event.trigger(persps[$(this).attr('id')]["marker"], 'click');
            return false;
          })
        });
      }
      
      function updatePhotos() {
        var count = 0;
        var locationHTML = "";
        for (var i=0; i<persps.length; i++) {
          if (persps[i]["marker"].getVisible() === true) {
            if (persps[i].photos.length > 0) {
              var pics = '';
              
              for (var j=0; j<persps[i].photos.length; j++) {
                pics += '<div class="photo_view_pic"><img class="map_photo_thumb map_photo" id="' + i + '" src="' + persps[i].photos[j].thumb + '"></div>';
              }
              locationHTML += pics;
              count += 1;
            }
          }
        }
        
        if (count == 0) {
          locationHTML = '<div class="no_places"><%= t("perspective.no_photos") %></div>';
        }
        
        $('#locations').html(locationHTML);
        
        $('.map_photo').each(function() {
          $(this).click(function() {
            google.maps.event.trigger(persps[$(this).attr('id')]["marker"], 'click');
          })
        });
      }
      
      $('#hide_filters_click').click(function(e) {
        e.preventDefault();
        $('#filters').height(0);
        $('#filters').slideUp('fast');
        $('#hide_filters').hide();
        loadState["<%= @user.username %>"]['showFilters'] = false;
        delete loadState["<%= @user.username %>"]['filterType'];
        delete loadState["<%= @user.username %>"]['filterValue'];
        google.maps.event.trigger(map, 'idle');
        return false;
      });
      
      $('#hide_locations_click').click(function(e){
        e.preventDefault();
        $('#locations').height(0);
        $('#locations').slideUp('fast');
        $('#hide_locations').hide();
        delete loadState["<%= @user.username %>"]['location'];
        google.maps.event.trigger(map, 'idle');
        return false;
      });
      
      $('#show_filters').click(function(e) {
        loadState["<%= @user.username %>"]['showFilters'] = true;
        e.preventDefault();
        
        if ($('#hide_filters').css('display') == 'none') {
          $('#hide_filters').show();
        }
        
        if ($('#filters').height() <= 0) {
          $('#filters').height($('#main_map').height() - $('#toggle_locations').outerHeight(true));
          $('#filters').slideDown('fast');
        }
        
        //updateFilters();
        
        google.maps.event.trigger(map, 'idle');
        
        return false;
      });
      
      $('#show_places').click(function(e) {
        loadState["<%= @user.username %>"]['location'] = 'places';
        e.preventDefault();
        
        if ($('#hide_locations').css('display') == 'none') {
          $('#hide_locations').show();
        }
        
        if ($('#locations').height() <= 0) {
          updatePlaces();
          
          $('#locations').height($('#main_map').height() - $('#toggle_locations').outerHeight(true));
          $('#locations').slideDown('fast');
        } else {
          updatePlaces();
        }
        google.maps.event.trigger(map, 'idle');
        return false;
      });
      
      $('#show_photos').click(function(e) {
        loadState["<%= @user.username %>"]['location'] = 'photos';
        e.preventDefault();
        
        if ($('#hide_locations').css('display') == 'none') {
          $('#hide_locations').show();
        }
        
        if ($('#locations').height() <= 0) {
          updatePhotos();
          
          $('#locations').height($('#main_map').height() - $('#toggle_locations').outerHeight(true));
          $('#locations').slideDown('fast');
        } else {
          updatePhotos();
        }
        google.maps.event.trigger(map, 'idle');
        return false;
      });
    
      var coords = JSON.parse($.cookie('location'));
      if ((typeof coords['remote_ip'] !== "undefined") || (typeof coords['browser'] !== "undefined") || navigator.geolocation) {
        // Create the icon
        
        $('#map_holder').append('<div id="current_location"><a href="/" class="pan"><img class="pan_img" src="/images/pan.png"></a></div>');
        $('#current_location').width(30);
        $('#current_location').css({
          'position':'absolute',
          'z-index':'10003',
        });
        // Assign callback
        $('.pan').click(function(e) {          
          e.preventDefault();
          if (typeof coords['browser'] !== "undefined") {
            var center = new google.maps.LatLng(parseFloat(coords['browser']['lat']), parseFloat(coords['browser']['lng']));
            map.setCenter(center);
          } else if (typeof coords['remote_ip'] !== "undefined") {
            var center = new google.maps.LatLng(parseFloat(coords['remote_ip']['lat']), parseFloat(coords['remote_ip']['lng']));
            map.setCenter(center);
          } else {
            navigator.geolocation.getCurrentPosition(function(position) {
              coords['browser'] = {}
              coords['browser']['lat'] = position.coords.latitude;
              coords['browser']['lng'] = position.coords.longitude;
              
              $.cookie('location', JSON.stringify(coords), {path:'/'});
              
              var center = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
              map.setCenter(center);
            });
          }
          return false;
        });
      }
    }
    
    $(document).ready(function(){
      initialize();
      
      $('.email_user').each(function() {
        $(this).qtip({
          content: '<span class="link_holder"><span class="link_header">Link:</span><input type="text" value="'+ $(this).attr("href") + '" class="link_text"></span>',
           position: {
             my: 'bottom right',
             at: 'top center'
           },
           show: {
             event: 'click',
             solo: true
           },
           hide: {
             event: 'click'
           },
           style: {
             classes: 'ui-tooltip-rounded ui-tooltip-shadow',
           }
        });
      });
      
      $('#filters').css({top: $('#header').outerHeight(true) + $('#userdetails').outerHeight(true) + $('#toggle_filters').outerHeight(true)});
      
      $(window).resize(function() {
        $('#main_map').width($(window).width);
        $('#main_map').height($(window).height() - $('#header').outerHeight(true) - $('#footerbottom').height() - $('#userdetails').outerHeight(true));

        $('#location_drawer').css('left', $(window).width() - $('#location_drawer').outerWidth(true));
        $('#location_drawer').css('top', $('#header').outerHeight(true) + $('#userdetails').outerHeight(true));
        
        if ($('#locations').height() > 0) {
          $('#locations').height($('#main_map').height() - $('#toggle_locations').outerHeight(true));
        }
        
        if ($('#filters').height() > 0) {
          $('#filters').height($('#main_map').height() - $('#toggle_filters').outerHeight(true));
        }
        
        $('#current_location').css({
          'left': 3,
          'top': $('#header').outerHeight(true) + $('#userdetails').outerHeight(true) + $('#main_map').outerHeight(true) - $('#current_location').outerHeight(true) - 32,
        });
      });
      
      $(window).resize();
      $('#toggle_locations').height(23);
      $('#toggle_locations').css({padding:3,"border-left":"2px solid #C7C7C7","border-bottom":"2px solid #C7C7C7"});
      
      // Check for initial page state via delay
      var startState = JSON.parse($.cookie('page_state'));
      if (startState !== null && typeof startState["<%= @user.username %>"] !== "undefined") {
        if (typeof startState["<%= @user.username %>"]["showFilters"] !== "undefined" && startState["<%= @user.username %>"]["showFilters"] === true) {
          $(window).delay(1000).queue(function() {
            $('#show_filters').click();
            $(this).dequeue();
          });
        }
        if (typeof startState["<%= @user.username %>"]["location"] !== "undefined") {
          
          if (startState["<%= @user.username %>"]["location"] === "places") {
            $(window).delay(100).queue(function() {
              $('#show_places').click();
              $(this).dequeue();
            });
          } else if (startState["<%= @user.username %>"]["location"] === "photos") {
            $(window).delay(100).queue(function() {
              $('#show_photos').click();
              $(this).dequeue();
            });
          }
        }
      }
    });
  </script>
<% end %>

<div id="userdetails">
  <%= render :partial => "detail", :locals => {:user => @user} %>    
</div>
<div id="map_holder">
  <div id="filter_drawer">
    <div id="toggle_filters">
      <div id="hide_filters"><a href="/" id="hide_filters_click"><img src="/images/hide.png" class="hide"></a></div>
      <div>Explore <a id="show_filters" href="/">Categories</a></div>
    </div>
  </div>
  <div id="filters"></div>
  <div id="location_drawer">
    <div id="toggle_locations">
      <div id="hide_locations"><a href="/" id="hide_locations_click"><img src="/images/hide.png" class="hide"></a></div>
      <div>Explore <a id="show_places" href="/">Places</a> and <a id="show_photos" href="/">Photos</a></div>
    </div>
    <div id="locations">
    </div>
  </div>
  <div id="main_map"></div>  
</div>
