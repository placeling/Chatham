<% content_for :css do %>
  <style type="text/css">
    * {
      margin: 0px;
      padding: 0px;
      font-family: 'Helvetica Neue', Helvetica, Arial, Sans-serif;
    }
    
    body {
      /* for Firefox */
      overflow-x: hidden;
      overflow-y: hidden;
    }
    
    a,a:link,a:visited { 
      color:#1271b0;
      text-decoration:none; 
    }

    a.no_highlight:focus, a.no_highlight:hover {
      text-decoration: none;
    } 

    a:focus,a:hover { 
      text-decoration:underline;
    }

    a img { 
      border:0; 
    }
    
    #placeling_iframe_logo {
      float:left;
      margin-top: 3px;
      margin-left: 10px;
    }
    
    #placeling_iframe_spacer {
      float:right;
      margin-top:3px;
      margin-right:10px;
      width: 117px;
    }
    
    .filter_value a, a:link, a:hover, a:visited {
      color: #36757c;
    }
    
    #iframe_tag_filter {
      position: absolute;
      left: 8px;
      top: 13px;
      z-index: 1;
    }
    
    #iframe_filter_bubble {
      position: absolute;
      left: 73px;
      top: 7px;
      z-index: 1;
      display:none;
    }
    
    .tag {
      color: #BE6958;
    }
    
    #iframe_grey_arrow_left {
      background-image: url(<%= asset_path('grey_arrow_left.png') %>);
    }
    
    #iframe_red_arrow_left {
      background-image: url(<%= asset_path('red_arrow_left.png') %>);
    }
    
    .arrow {
      background-repeat: no-repeat;
      background-position: left top;
      position: absolute;
      z-index:1;
      left:62px;
      height:22px;
      width:11px;
      top:17px;
      display:none;
    }
    
    .red_arrow_holder {
      height: 28px;
      background-image: url(<%= asset_path('red_background.png') %>);
      border: 2px solid #BF4F41;
      border-radius: 3px;
      color: white;
      font-size: 18px;
      font-weight: bold;
      padding: 6px 7px 4px 7px;
    }
    
    #filter_holder {
      max-height: 300px;
      width: 180px;
      background-image: url(<%= asset_path('background_pattern.png') %>);
      border: 2px solid #e9e6e4;
      border-radius: 3px;
      color: #6A6147;
    }
    
    .filter_header {
      padding: 8px 0px 4px 7px;
      background: #e9e6e4;
    }
    
    #no_filters {
      height: 28px;
    }
    
    #available_filters {
      overflow-y: auto;
      max-height: 270px;
    }
    
    #close_filters {
      float: right;
      margin-right: 5px;
    }
    
    .close_filters {
      height:14px;
      width: 14px;
    }
    
    .filter_tag {
      padding: 2px 7px;
    }
    
    .even {
      background: #faf8f6;
    }
    
    .odd {
      background: #f3f2f1;
    }
    
    .spinner {
      max-height: 30px;
      max-width: 30px;
    }
    
    .info_window {
      width:300px;
      background: #F9F7F5;
      padding: 5px;
    }
    
    @media only screen 
    and (max-width : 480px) {
      #placeling_iframe_logo, #placeling_iframe_spacer {
        display: none;
      }
      
      .info_window {
        width: 200px;
      }
    }
    
    .info_name {
      font-size: 18px;
      color: #567E79;
      font-weight: bold;
      padding-left: 3px;
    }
    
    .info_img {
      max-height: 24px;
    }
    
    .info_cat_and_tags {
      font-size: 14px;
      margin-top: -3px;
      color: #666666;
      padding-left: 3px;
    }
    
    .info_cat {
      color: #567E79;
      font-weight: 500;
    }
    
    .info_tag {
      color: #567E79;
      font-weight: 500;
    }
    
    .info_memo {
      max-height: 52px;
      overflow-y: auto;
      margin-top: -2px;
      padding-left: 4px;
      font-size: 12px;
      font-family: Rockwell,Georgia,Serif;
      margin-bottom: 5px;
      color: #6A6147;
    }
    .info_memo p {
      font-family: Georgia,"Times New Roman",Serif;
      color: #6A6147;
      padding-top: 5px;
    }
    
    .info_pics {
      height: 76px;
      padding: 3px;
      overflow-x: auto;
      margin-right: -5px;
    }
    
    .info_pic {
      margin-right: 10px;
    }
    
    .info_pic_thumb {
      height: 60px;
      width: 60px;
      border: solid 6px white;
      -moz-box-shadow: 0 0 2px 0 #888;
      -webkit-box-shadow: 0 0 2px 0 #888;
      box-shadow: 0 0 2px 0 #888;
    }
    
    .hidden_pic {
      display: none;
    }
    
    .more_photos {
      font-size: 10px;
      float:right;
      padding-right:15px;
      padding-top:54px;
    }
    
    .info_mod {
      font-size: 10px;
      color: #666666;
      padding-left: 4px;
    }
    
    .info_icon {
      max-height: 20px;
    }
    
    .info_update {
      height: 27px;
      padding-top: 4px;
    }
    
    .info_url {
      font-size: 14px;
      padding-left:4px;
    }
    
    #action {
      text-align:center;
      background:#fff url(<%= asset_path 'background_tile.png' %>) repeat-x;
      width:<%= @width %>px;
    }
    
    @font-face {
      font-family: MuseoSlab;
      src: url(<%= asset_path 'MuseoSlab.otf' %>);
    }
    
    #outro, #outro a {
      padding-top: 14px;
      font-family:MuseoSlab, Rockwell, Helvetica, Arial, sans-serif;
      font-size:18px;
      text-shadow:#DDD 0 1px 0px;
    }
    
    #outro {
      color: #000;
      margin-left:auto;
      margin-right:auto;
      width:200px;
      text-align: center;
    }
    
    #lat {
      display: none;
    }
    
    #lng {
      display: none;
    }
    
    #zoom {
      display: none;
    }
    
    .iframe_logo {
      width: 140px;
      margin-bottom: -14px;
    }
  </style>
<% end %>

<% content_for :javascript_includes do %>
  <script type="text/javascript"
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCtWBCKJwtHq7ME82vk3d7eUsRknvzgrAQ&amp;sensor=false">
  </script>

<% end %>
<% content_for :javascript do %>

  <script type="text/javascript">
    document.domain = "placeling.com";

    var DEFAULT_HEIGHT = 81;
    var MAX_PHOTOS = 3;
    
    var MIN_HEIGHT = 400; // If height of map is less than this, hide photos
    
    var persps = {};
    var myOptions;
    var placemark;
    var map;
    var shape;
    var infoWindow;
    var filterTag;
    var sortAlpha = true;
    
    function filter_term(a, b) {
        if (a.term < b.term)
            return -1;
        if (a.term > b.term)
            return 1;
        return 0;
    }

    function filter_count(a, b) {
        if (a.count > b.count)
            return -1;
        if (a.count < b.count)
            return 1;
        if (a.count == b.count) {
            if (a.term < b.term)
                return -1;
            if (a.term > b.term)
                return 1;
            return 0;
        }
    }
    
    function openWindow(url)
    {
      window.open(url, '_blank');
    }

    function createMarker(perspective) {
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng(perspective.ploc[0], perspective.ploc[1]),
        icon: placemark,
        shape: shape,
        map: map,
        title: perspective.place.name
      });
      google.maps.event.addListener(marker, 'click', function(){
        if (infowindow.getMap() && infowindow.getPosition() === marker.getPosition()) {
          infowindow.close();
        } else {
          var infoWindowHTML = '<div class="info_window">';

          infoWindowHTML += '<div class="info_name">';
          if (perspective.url !== null) {
            infoWindowHTML += '<a href="' + perspective.url + '"  onclick="javascript:openWindow(this.href);return false;">' + perspective.place.name + '</a>';
          } else {
            infoWindowHTML += '<a href="/places/' + perspective.place.id + '" onclick="javascript:openWindow(this.href);return false;">' + perspective.place.name + '</a>';
          }
          infoWindowHTML += '</div>';

          if (perspective.tags.length > 0) {
            infoWindowHTML += '<div class="info_cat_and_tags">';
            infoWindowHTML += '<span class="tag">#';
            infoWindowHTML += perspective.tags.join('</span>, <span class="tag">#');
            infoWindowHTML += '</span>';
            infoWindowHTML += '</div>';
          }
          
          if (perspective.memo !== null && perspective.memo.length > 0) {
            infoWindowHTML += '<div class="info_memo">' + perspective.memo + '</div>';
          }

          if (perspective.url !== null) {
            infoWindowHTML += '<div class="info_url"><a href="' + perspective.url + '" onclick="javascript:openWindow(this.href);return false;"><%= t('perspective.web_link') %></a></div>';
          }

          if (perspective.photos.length > 0) {
            var height = <%= @height %> - DEFAULT_HEIGHT;
            if (height > MIN_HEIGHT) {
              var pics = '<div class="info_pics">';

              for (var i=0; i<perspective.photos.length; i++) {
                if (i < MAX_PHOTOS) {
                  pics += '<span class="info_pic"><img class="info_pic_thumb" src="' + perspective.photos[i].square_url + '"></span>';
                } else {
                  pics += '<span class="hidden_pic"><img class="info_pic_thumb" src="' + perspective.photos[i].square_url + '"></span>';
                }
              }
              if (perspective.photos.length > MAX_PHOTOS) {
                pics += '<div class="more_photos">+' + (perspective.photos.length - MAX_PHOTOS) + " more</div>";
              }

              pics += '</div>';

              infoWindowHTML += pics;
            }
          }
          
          var modified_at = new Date( perspective.modified_at );
          var mod_action = '<div class="info_update"><span class="info_mod">' + $.datepicker.formatDate('M. dd, yy', modified_at ); + '</span>';
          
          infoWindowHTML += mod_action;

          infoWindowHTML += '</div>';

          infowindow.open(map, marker);
          infowindow.setContent(infoWindowHTML);
          infowindow.setPosition(marker.getPosition());
          google.maps.event.trigger(map, 'idle');
        }
      });
      marker.setVisible(false);
      return marker;
    }
    
    function hideFilters(){
      $('#iframe_filter_bubble').fadeOut(100);
      $('#iframe_red_arrow_left').fadeOut(100);
      $('#iframe_grey_arrow_left').fadeOut(100);
      window.setTimeout(function() {
        filterTag = undefined;
        updateMap();
      }, 100);
    }
    
    function updateFilters(sortType) {
        var filters = {}
        
        var bounds = map.getBounds();
        for (var persp in persps) {
            if (bounds.contains(persps[persp]["marker"].getPosition())) {
              if (persps[persp].tags.length > 0) {
                  for (var j = 0; j < persps[persp].tags.length; j++) {
                      if (filters[persps[persp].tags[j]]) {
                          filters[persps[persp].tags[j]] += 1;
                      } else {
                          filters[persps[persp].tags[j]] = 1;
                      }
                  }
              }
            }
        }

        var cleanFilters = [];

        for (var tag in filters) {
            cleanFilters.push({'term':tag, 'count':filters[tag]});
        }
        
        var html = ""
        if (typeof filterTag !== "undefined") {
          html += "<div class='red_arrow_holder'>#";
          html += filterTag;
          html += " (";
          var count = 0;
          for (var i=0; i<cleanFilters.length; i++) {
            if (cleanFilters[i]['term'] === filterTag) {
              count = cleanFilters[i]['count'];
              break;
            }
          }
          html += count;
          html += ")</div>";
        } else {
          html += '<div id="filter_holder">'
          if (cleanFilters.length == 0) {
            html += '<div class="filter_header" id="no_filters"><div id="close_filters"><a href="#" id="close_filters_link"><%= image_tag asset_path("close.png"), :class=>"close_filters" %></a></div><%= t('user.no_hashtags') %></div>';
          } else {
            html += '<div class="filter_header"><div id="close_filters"><a href="#" id="close_filters_link"><%= image_tag asset_path("close.png"), :class=>"close_filters" %></a></div>';
            if (sortType === true) {
              html += '<div id="sort_type">abc <a href="/" id="sort_count">321</a></div>';
              cleanFilters.sort(filter_term);
            } else {
              html += '<div id="sort_type"><a href="/" id="sort_alpha">abc</a> 321</div>';
              cleanFilters.sort(filter_count);
            }
            
            html += '</div><div id="available_filters">';
            
            for (var i = 0; i < cleanFilters.length; i++) {
                html += '<div class="filter_tag ';
                html += (i % 2 == 0) ? "even" : "odd";
                html += '"><a href="/" class="filter_value">#';
                html += cleanFilters[i]["term"];
                html += '</a> <span class="filter_count">(';
                html += cleanFilters[i]["count"];
                html += ')</span>';
                html += "</div>";
            }
            html += "</div>";
          }
          html += "</div>";
        }
        
        $('#iframe_filter_bubble').html(html);
        
        $('.filter_value').each(function () {
            $(this).click(function (e) {
                e.preventDefault();
                if (infowindow.getMap()) {
                  infowindow.close();
                }
                $('#iframe_red_arrow_left').show();
                var term = $(this).text();
                filterTag = term.substr(1, term.length - 1);
                google.maps.event.trigger(map, 'idle');
                return false;
            })
        })
        
        $('#sort_count').click(function (e) {
            e.preventDefault();
            sortAlpha = false;
            google.maps.event.trigger(map, 'idle');
            return false;
        });

        $('#sort_alpha').click(function (e) {
            e.preventDefault();
            sortAlpha = true;
            google.maps.event.trigger(map, 'idle');
            return false;
        })
        
        $('.red_arrow_holder').click(function(e) {
          e.preventDefault();
          hideFilters();
          return false;
        });
        
        $('#close_filters_link').click(function(e) {
          e.preventDefault();
          hideFilters();
          return false;
        });
    }
    
    
    function updatePerspectives(perspectiveList) {
      for (var i=0; i < perspectiveList.length; i++) {
        if (typeof persps[perspectiveList[i]['place_id']] === "undefined") {
          persps[perspectiveList[i]['place_id']] = perspectiveList[i];
          persps[perspectiveList[i]['place_id']]['marker'] = createMarker(perspectiveList[i]);
        }
      }
      updateMap();
    }
    
    function updateMap() {
      var currentBounds = map.getBounds();

      for (var persp in persps) {
        if (currentBounds.contains(persps[persp]["marker"].getPosition())) {
          // Filter for tags
          if (typeof filterTag === "undefined") {
              if (persps[persp]["marker"].getVisible() === false) {
                  persps[persp]["marker"].setVisible(true);
              }
          } else {
              var pass = false;
              if (persps[persp].tags.length > 0) {
                  for (var j = 0; j < persps[persp].tags.length; j++) {
                      if (persps[persp].tags[j] === filterTag) {
                          pass = true;
                      }
                  }
              }
              if (pass === true && persps[persp]["marker"].getVisible() === false) {
                  persps[persp]["marker"].setVisible(true);
              } else if (pass === false && persps[persp]["marker"].getVisible() === true) {
                  persps[persp]["marker"].setVisible(false);
              }
          }
        } else {
          persps[persp]["marker"].setVisible(false);
        }
      }

      if (infowindow.getMap()) {
        if (currentBounds.contains(infowindow.getPosition()) === false) {
          infowindow.close();
        }
      }
      
      updateFilters(sortAlpha);
    };
    
    function initialize() {
      var zoom = <%= @zoom %>;
      var lat = <%= @lat %>;
      var lng = <%= @lng %>;
      
      persps = {};
      var topLat;
      var bottomLat;
      var rightLng;
      var leftLng;
      var requests = 0;

      myOptions = {
        center: new google.maps.LatLng(lat, lng),
        zoom: zoom,
        panControl: false,
        mapTypeControl: false,
        scaleControl: false,
        streetViewControl: false,
        overviewMapControl: false,
        zoomControlOptions: {
          position: google.maps.ControlPosition.LEFT_CENTER
        },
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };

      map = new google.maps.Map(document.getElementById("main_map"), myOptions);

      placemark = new google.maps.MarkerImage(
        '/images/placemarker.png',
        new google.maps.Size(30,32),
        new google.maps.Point(0, 0),
        new google.maps.Point(9, 32)
      );

      shape = {
        coord: [1,1,1,15,6,20,9,30,12,20,18,15,18,1],
        type: 'poly'
      };

      infowindow = new google.maps.InfoWindow({});

      google.maps.event.addListener(map, 'click', function() {
        infowindow.close();
        google.maps.event.trigger(map, 'idle');
      });

      google.maps.event.addListener(infowindow, 'closeclick', function() {
        google.maps.event.trigger(map, 'idle');
      })

      google.maps.event.addListener(map, 'idle', function() {
        var callServer = false;
        var bounds = map.getBounds();

        $('#lat').text(map.getCenter().lat());
        $('#lng').text(map.getCenter().lng());
        $('#zoom').text(map.getZoom());

        if ((typeof topLat === "undefined") || (typeof bottomLat === "undefined") || (typeof rightLng === "undefined") || (typeof leftLng === "undefined")) {
          callServer = true;
        }

        if (callServer === false) {
          var updatedTopLat = bounds.getNorthEast().lat();
          var updatedBottomLat = bounds.getSouthWest().lat();
          var updatedRightLng = bounds.getNorthEast().lng();
          var updatedLeftLng = bounds.getSouthWest().lng();

          if ((updatedTopLat > topLat) || (updatedBottomLat < bottomLat)) {
            callServer = true;
          }

          if (callServer === false) {
            if (updatedRightLng > rightLng || updatedLeftLng < leftLng) {
              callServer = true;
            }
          }
        }

        if (callServer == true) {
          requests += 1;
          if (requests > 0) {
            $('#spinner').show();
          }

          if ((typeof topLat === "undefined") || (typeof bottomLat === "undefined") || (typeof rightLng === "undefined") || (typeof leftLng === "undefined")) {
            var updatedTopLat = Math.min(bounds.getNorthEast().lat() + 2*(bounds.getNorthEast().lat() - bounds.getSouthWest().lat()), 90);
            var updatedBottomLat = Math.max(bounds.getSouthWest().lat() - 2*(bounds.getNorthEast().lat() - bounds.getSouthWest().lat()), -90);
            var updatedRightLng = bounds.getNorthEast().lng() + (bounds.getNorthEast().lng() - bounds.getSouthWest().lng());
            var updatedLeftLng = bounds.getSouthWest().lng() - (bounds.getNorthEast().lng() - bounds.getSouthWest().lng());
            if (updatedRightLng > 0) {
              updatedRightLng = Math.min(180, updatedRightLng);
            }
            if (updatedRightLng < 0) {
              updatedRightLng = Math.max(-180, updatedRightLng);
            }
            if (updatedLeftLng > 0) {
              updatedLeftLng = Math.min(180, updatedLeftLng);
            }
            if (updatedLeftLng < 0) {
              updatedLeftLng = Math.max(-180, updatedLeftLng);
            }
          } else {
            var updatedTopLat = bounds.getNorthEast().lat();
            var updatedBottomLat = bounds.getSouthWest().lat();
            var updatedRightLng = bounds.getNorthEast().lng();
            var updatedLeftLng = bounds.getSouthWest().lng();
          }

          $.ajax({
            url:'<%= bounds_user_path(@user) %>',
            data: {
              top_lat: updatedTopLat,
              bottom_lat: updatedBottomLat,
              right_lng: updatedRightLng,
              left_lng: updatedLeftLng
            },
            dataType:"json",
            type:"GET",
            success: function(data) {
              updatePerspectives( data.perspectives );

              requests -= 1;
              if (requests <= 0) {
                $('#spinner').hide();
              }
              if ((typeof topLat === "undefined") || (typeof bottomLat === "undefined") || (typeof rightLng === "undefined") || (typeof leftLng === "undefined")) {
                topLat = updatedTopLat,
                bottomLat = updatedBottomLat,
                rightLng = updatedRightLng,
                leftLng = updatedLeftLng
              } else {
                if (updatedTopLat > topLat) {
                  topLat = updatedTopLat;
                }
                if (updatedBottomLat < bottomLat) {
                  bottomLat = updatedBottomLat;
                }
                if (updatedRightLng > rightLng) {
                  rightLng = updatedRightLng;
                }
                if (updatedLeftLng < leftLng) {
                  leftLng = updatedLeftLng;
                }
              }
            }
          });
        } else {
          updateMap();
        }
      });
      
      $('#iframe_tag_filter_link').click(function(e) {
        e.preventDefault();
        if (infowindow.getMap()) {
          infowindow.close();
        }
        if ($('#iframe_filter_bubble').is(':visible')) {
          hideFilters();
        } else {
          $('#iframe_filter_bubble').fadeIn(100);
          $('#iframe_grey_arrow_left').fadeIn(100);
          updateFilters(sortAlpha);
        }
        return false;
      });
    }

    $(document).ready(function(){
      initialize();
      $('#map_holder').width(<%= @width %>);
      var height = <%= @height %> - DEFAULT_HEIGHT;
      $('#map_holder').css({"height": height});
      $('#action').css({"height": DEFAULT_HEIGHT});
      
      $('#map_holder').append('<div id="spinner"><img class="spinner" src="<%= asset_path("spinner.gif") %>"></div>');
      $('#spinner').css({
        'position':'absolute',
        'left': 3,
        'top': height - 62
      });
      $('#spinner').hide();
    });
  </script>
<% end %>


<div id="map_holder">
  <div id="iframe_tag_filter">
    <a href="#" id="iframe_tag_filter_link"><%= image_tag asset_path("tag_icon.png") %></a>
  </div>
  <div id='iframe_grey_arrow_left' class="arrow"></div>
  <div id='iframe_red_arrow_left' class="arrow"></div>
  <div id="iframe_filter_bubble"></div>
  <div id="main_map" style="width:100%; height:100%"></div>
</div>
<div id="action">
  <div id="placeling_iframe_logo">
    <%= link_to image_tag("/images/blogFooterLogo.png"), root_path, :target=>"_blank" %>
  </div>
  <div id="placeling_iframe_spacer">&nbsp;</div>
  <div id="outro">Get <a href="<%= app_path %>" rel="nofollow" target="_blank"><%= @user.username %>'<% if @user.username[@user.username.length-1] != 's' %>s<% end %></a> map on your iPhone.</div>
  <div id="lat"></div><div id="lng"></div><div id="zoom"></div>
</div>