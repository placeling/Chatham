
<% content_for :javascript_includes do %>

    <script type="text/javascript"
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCtWBCKJwtHq7ME82vk3d7eUsRknvzgrAQ&sensor=false&libraries=places">
    </script>
<% end %>


<% content_for :css do %>
    #latlng{
        width:100%;
        text-align: right;
    }

<% end %>

<div id="content_holder">
    <div id="story">
    <div class="title"><%= t 'place.add_new' %></div>
    <div class="story_text">

        <%= form_for @place, :url =>{:action => "confirm"} do |f| %>
          <% if @place.errors.any? %>
            <div id="error_explanation">
              <h2><%= pluralize(@place.errors.count, "error") %> prohibited this place from being saved:</h2>

              <ul>
              <% @place.errors.full_messages.each do |msg| %>
                <li><%= msg %></li>
              <% end %>
              </ul>
            </div>
          <% end %>

          <div class="standout">
            <p><%= t'place.name' %></p>
            <%= f.text_field :name, :class => "place_input" %>
          </div>

          <%= f.hidden_field :address_components, :id=>"address_components" %>
          <div class="standout">
            <p><%= t'place.address' %></p>
            <p><input id="map_source" name="address" type="text" size="100" class="place_input"/></p>
          </div>

          <div id="selector_map" style="height:300px; width: 300px;">
            <div id="map_canvas" style="width:100%; height:100%"></div>
            <div id="latlng"></div>
          </div>
          <br>

          <div class="field">
            <% if @place.location %>
              <input id="lat" name="place[location][]" type="hidden" value="<%= @place.location[0] %>">
              <input id="lng" name="place[location][]" type="hidden" value="<%= @place.location[1] %>">
            <% else %>
              <input id="lat" name="place[location][]" type="hidden" value="" />
              <input id="lng" name="place[location][]" type="hidden" value="" />
            <% end %>
          </div>
          <div id="map"></div>
          <p><%= t'place.category' %></p>

          <%  @place.venue_types.each do |venue| %>
            <%= hidden_field_tag "place[venue_types][]", venue, :id => "place_venue_type" %>
          <% end %>

          <div id="create">
            <input id="save_place_button" name="commit" type="button" value="Save">
          </div>
        <% end %>
      </div>
  </div>
</div>

<% content_for :javascript do %>

  <script type="text/javascript">
    var main_map;
    var t;

     function updateGeocode(){
        clearTimeout( t );
         var latlng = main_map.getCenter();
         geocoder = new google.maps.Geocoder();

         geocoder.geocode({ 'latLng': latlng }, function (results, status) {

            // This is checking to see if the Geoeode Status is OK before proceeding
            if (status == google.maps.GeocoderStatus.OK && results[0]){
                $("#address_components").val( JSON.stringify( results[0].address_components ) );
                //This is placing the returned address in the 'Address' field on the HTML form
                $("#map_source").val( results[0].formatted_address );
            }
        });

    }

    function centerReticle(){
        clearTimeout( t );
        lat = main_map.getCenter().lat();
        lng = main_map.getCenter().lng();
        $("#lat").val(lat);
        $("#lng").val(lng);
        $("#latlng").html( lat.toFixed(4) +","+lng.toFixed(4) );
        reticleMarker.setPosition(main_map.getCenter());
        t = setTimeout("updateGeocode()",1500);
    }

    $(document).ready(function(){

        $("#save_place_button").click(function(){
            $(".category_select").remove();  //necessary to prevent rack weirdness
            $("#new_place").submit();
        });

        var options = {empty_value: "", select_class: 'category_select', preselect: $("#place_venue_type").val() };

        $('#place_venue_type').optionTree(<%= raw @categories.to_json %>, options);
        var reticleImage = new google.maps.MarkerImage(
            '/images/cross-hairs.gif',            // marker image
            new google.maps.Size(27, 27),    // marker size
            new google.maps.Point(0,0),      // marker origin
            new google.maps.Point(13, 13));  // marker anchor point
          var reticleShape = {
            coords: [32,32,32,32],           // 1px
            type: 'rect'                     // rectangle
          };

        if ( $("#lat").val() != "" && $("#lng").val() != "" ){
            latlng = new google.maps.LatLng($("#lat").val(), $("#lng").val())
        } else {
            latlng = new google.maps.LatLng(default_lat, default_lng)
        }

        var myOptions = {
          center: latlng,
          zoom: 15,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        main_map = new google.maps.Map(document.getElementById("map_canvas"),
            myOptions);

        reticleMarker = new google.maps.Marker({
            position: latlng,
            map: main_map,
            icon: reticleImage,
            shape: reticleShape,
            optimized: false,
            zIndex: 5
          });
        google.maps.event.addListener(main_map, 'bounds_changed',centerReticle);

        var input = document.getElementById('map_source');
        var autocomplete = new google.maps.places.Autocomplete(input);

        autocomplete.bindTo('bounds',main_map);

        google.maps.event.addListener(autocomplete, 'place_changed', function() {
          var place = autocomplete.getPlace();
          if (place.geometry && place.geometry.viewport) {
            main_map.fitBounds(place.geometry.viewport);
          } else {
            main_map.setCenter(place.geometry.location);
            main_map.setZoom(18);  // Why 17? Because it looks good.
          }

          var image = new google.maps.MarkerImage(
              place.icon,
              new google.maps.Size(71, 71),
              new google.maps.Point(0, 0),
              new google.maps.Point(17, 34),
              new google.maps.Size(35, 35));

          var address = '';
          if (place.address_components) {
            address = [(place.address_components[0] &&
                        place.address_components[0].short_name || ''),
                       (place.address_components[1] &&
                        place.address_components[1].short_name || ''),
                       (place.address_components[2] &&
                        place.address_components[2].short_name || '')
                      ].join(' ');
          }
        });

     });

    function updateMapFactory(latLngObject) {
      return function(event) {
        event.preventDefault();
        updateMap(latLngObject);
      }
    }

  </script>
<% end %>